{"version":3,"sources":["lib/db.ts","lib/theme.ts","lib/util.ts","actions/AppEventsActions.ts","actions/KanbanBoardActions.ts","dispatchers/AppEventsDispatcher.ts","lib/datetime.ts","data/initial-data.ts","states/KanbanBoardState.ts","actions/CalendarActions.ts","states/CalendarState.ts","states/AppEventsState.ts","store.ts","dispatchers/KanbanBoardDispatcher.ts","lib/gensym.ts","components/TextInputDialog.tsx","components/AppDrawer.tsx","components/ConfirmDialog.tsx","lib/csv.ts","components/KanbanDialog.tsx","views/KanbanBoardView.tsx","dispatchers/CalendarViewDispatcher.ts","views/CalendarView.tsx","lib/validation.ts","views/EditorView.tsx","views/SettingsView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["dbBaseName","window","location","pathname","replace","PouchDB","plugin","PouchDBFind","remoteDb","rep","localDb","auto_compaction","localConfigDb","startSync","a","allDocs","localDocs","remoteDocs","idSet","Set","rows","doc","add","id","sync","live","retry","doc_ids","Array","from","values","on","change","info","err","restartSync","cancel","e","setRemoteDb","url","user","password","close","match","auth","username","getLocalDb","getLocalConfigDb","isDark","matchMedia","matches","theme","createMuiTheme","palette","type","primary","main","blue","secondary","pink","getCurrentView","history","currentView","startsWith","actionCreator","actionCreatorFactory","updateAppConfig","async","resetApplication","appEventsActions","showAlertDialog","closeAlertDialog","startUpdateAppConfig","started","doneUpdateAppConfig","done","failedUpdateAppConfig","failed","startResetApplication","doneResetApplication","failedResetApplication","addBoard","changeActiveBoard","updateBoardName","deleteBoard","addSticky","updateSticky","updateStickyLanes","archiveSticky","unarchiveSticky","deleteSticky","editBoardAndStickys","refreshActiveBoard","kanbanBoardActions","startAddBoard","doneAddBoard","failedAddBoard","startChangeActiveBoard","doneChangeActiveBoard","failedChangeActiveBoard","startUpdateBoardName","doneUpdateBoardName","failedUpdateBoardName","startDeleteBoard","doneDeleteBoard","failedDeleteBoard","startAddSticky","doneAddSticky","failedAddSticky","startUpdateSticky","doneUpdateSticky","failedUpdateSticky","startUpdateStickyLanes","doneUpdateStickyLanes","failedUpdateStickyLanes","startArchiveSticky","doneArchiveSticky","failedArchiveSticky","startUnarchiveSticky","doneUnarchiveSticky","failedUnarchiveSticky","startDeleteSticky","doneDeleteSticky","failedDeleteSticky","startEditBoardAndStickys","doneEditBoardAndStickys","failedEditBoardAndStickys","startRefreshActiveBoard","doneRefreshActiveBoard","failedRefreshActiveBoard","mapDispatchToProps","dispatch","v","boardId","mapStateToProps","appState","Object","assign","appEvents","formatDate","d","String","getFullYear","padStart","getMonth","getDate","parseISODate","s","m","Date","Number","boardNote","initialData","kanbanBoardReducer","getKanbanBoardReducer","db","resp","include_docs","length","data","bulkDocs","boards","map","x","postRespBoards","now","records","rec","dueDate","filter","sort","b","name","toLocaleLowerCase","board","_id","initialState","activeBoard","activeBoardId","activeBoardIndex","getKanbanBoardStateFromDb","state","get","find","selector","docs","index","Math","max","findIndex","slice","concat","reducerWithInitialState","case","payload","boardName","taskStatuses","teamOrStories","tags","displayBarcode","displayMemo","displayFlags","displayTags","preferArchive","boardStyle","calendarStyle","post","then","saved","_rev","rev","getConstructedAppStore","params","result","setTimeout","push","catch","error","open","title","message","singleButton","colorIsSecondary","onClose","arg","alert","newState","dbBoard","put","record","remove","description","barcode","memo","flags","taskStatus","value","teamOrStory","kanbanId","taskStatusValue","teamOrStoryValue","recordsNew","recDb","recNew","calendarActions","showToday","showNextMonth","showPreviousMonth","showNextYear","showPreviousYear","calendarReducer","getCalendarReducer","activeMonth","appEventsReducer","getAppEventsReducer","confDb","defaultAppConfig","remote","endpointUrl","display","autoUpdate","autoUpdateInterval","alertDialog","appConfig","newConf","destroy","createHashHistory","hashType","store","getAppStore","createStore","combineReducers","connectRouter","router","kanbanBoard","calendar","compose","applyMiddleware","routerMiddleware","gensymSeed","gensym","TextInputDialog","props","useTheme","React","useState","setOpen","setValue","formDialogTitleId","handleCancelClick","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fieldLabel","fullWidth","validator","onChange","event","target","DialogActions","Button","variant","color","onClick","style","marginLeft","spacing","cancelButtonCaption","disabled","applyButtonCaption","useStyles","makeStyles","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","nested","paddingLeft","withRouter","connect","classes","trim","apply","setTextInputOpen","textInputOpen","boardsOpen","setBoardsOpen","matchesPrint","useMediaQuery","handleChangeView","viewName","Drawer","className","clsx","paper","anchor","IconButton","Divider","List","component","subheader","ListSubheader","ListItem","button","Collapse","in","timeout","unmountOnExit","disablePadding","key","selected","fontWeight","ev","view","handleClickChangeActiveBoard","ListItemText","ListItemIcon","ConfirmDialog","inputValue","setInputValue","fab","textAlign","split","arr","confirmingTextValue","confirmingTextLabel","marginRight","marginBottom","$s","getStringParsers","rawToToken","rawToken","concatTokens","tokens","reduce","seq","cls","notCls","cat","repeat","end","first","combine","erase","trans","ahead","makeProgram","quoted","input","spaceWithinSingleLine","nakid","cell","row","newline","parse","z","parserInput","succeeded","Error","formatErrorMessage","formControl","minWidth","icon","fontSize","fabDelete","position","right","top","KanbanDialog","confirmOpen","setConfirmOpen","setDescription","setBarcode","setMemo","includes","join","setTags","setFlags","setDueDate","setTaskStatus","setTeamOrStory","taskStatusesId","teamOrStoryId","archived","onCancel","handleTagsChange","handleFlagsChange","paddingBottom","Typography","utils","DateFnsUtils","multiline","rowsMax","helperText","format","KeyboardButtonProps","date","FormControl","marginTop","InputLabel","htmlFor","Select","inputProps","MenuItem","caption","tagsTrimmed","tagsParsed","parseCsv","flagsTrimmed","flagsParsed","onApply","isNaN","getTime","Fab","size","aria-label","onUnarchive","onArchive","onDelete","DOMPurify","createDOMPurify","root","smallIcon","height","mapNeverStateToProps","firefox","navigator","userAgent","toLowerCase","indexOf","Sticky","today","expired","completed","data-record-id","draggable","onDragStart","dataTransfer","setData","matched","q","dangerouslySetInnerHTML","__html","sanitize","marked","Qr","fill","fillColor","cellSize","unit","toImgTag","Stickys","filtered","data-status","data-team-or-story","onDragOver","preventDefault","onDrop","elId","getData","el","document","getElementById","dataset","recordId","currentState","getState","align","cursor","textDecoration","padding","kanbanBoardState","flexGrow","backgroundColor","border","borderCollapse","tableLayout","calendarTitle","calendarTitleToolBar","left","overflow","calendarTopLeftHeader","calendarDaysHeader","calendarSundayHeader","calendarSaturdayHeader","calendarCell","verticalAlign","calendarWeekendCell","calendarCellCaptionToday","borderRadius","chip","textOverflow","paddingRight","chipWrap","CalendarItem","month","firstDateOfMonth","lastDateOfMonth","firstDateOfCal","getDay","lastDateOfCal","nextCalDate","dates","week","wd","stickys","toLocaleDateString","userLanguage","language","browserLanguage","year","next","toISOString","paddingTop","minHeight","pickEditableBoardProps","sticky","checkStyleXSS","text","validateBoardProps","isArray","forEach","validateStickyProps","header","codemirror","fabSave","confirmDeletingOpen","setConfirmDeletingOpen","editorValue","setEditorValue","editCount","setEditCount","jsYaml","safeLoad","safeDump","lineWidth","options","mode","lineNumbers","lineWrapping","editor","conf","confirmResetAppOpen","setConfirmResetAppOpen","goAround","validateConfigProps","app","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","console","log","nextActiveBoardId","CssBaseline","ThemeProvider","path","exact","KanbanBoardView","CalendarView","EditorView","SettingsView","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7341a593.chunk.js","sourcesContent":["// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport PouchDB     from 'pouchdb-browser';\nimport PouchDBFind from 'pouchdb-find';\n\n\n\nconst dbBaseName = window.location.pathname.replace(/\\//g, '_');\n\nPouchDB.plugin(PouchDBFind);\n\nlet remoteDb: PouchDB.Database | null = null;\nlet rep: PouchDB.Replication.Sync<{}> | null = null;\nconst localDb = new PouchDB(`kanban-board-v1@${dbBaseName}`, { auto_compaction: true });\nconst localConfigDb = new PouchDB(`kanban-board-config-v1@${dbBaseName}`, { auto_compaction: true });\n\n\nasync function startSync() {\n    if (remoteDb) {\n        const localDocs = await localDb.allDocs({});\n        const remoteDocs = remoteDb ? await remoteDb.allDocs({}) : null;\n        const idSet = new Set<string>();\n        for (const doc of localDocs.rows) {\n            idSet.add(doc.id);\n        }\n        if (remoteDocs) {\n            for (const doc of remoteDocs.rows) {\n                idSet.add(doc.id);\n            }\n        }\n\n        rep = localDb.sync(remoteDb, {\n            live: true,\n            retry: true,\n            doc_ids: Array.from(idSet.values()),\n        })\n        .on('change', change => {\n            // something changed!\n        })\n        .on('paused', info => {\n            // replication was paused, usually because of a lost connection\n        })\n        .on('active' as any, info => {\n            // TODO: TypeScript reports the error that parameter 'active' is invalid.\n            // replication was resumed\n        })\n        .on('complete', info => {\n            // replication was canceled!\n        })\n        .on('error', err => {\n            // totally unhandled error (shouldn't happen)\n        });\n    }\n}\n\n\nexport async function restartSync() {\n    if (rep) {\n        try {\n            rep.cancel();\n        } catch (e) {\n            // ignore error\n        }\n        rep = null;\n    }\n\n    await startSync();\n}\n\n\nexport async function setRemoteDb(url: string, user: string, password: string) {\n    if (rep) {\n        try {\n            rep.cancel();\n        } catch (e) {\n            // ignore error\n        }\n        rep = null;\n    }\n    if (remoteDb) {\n        try {\n            await remoteDb.close();\n        } catch (e) {\n            // ignore error\n        }\n        remoteDb = null;\n    }\n\n    if (url && url.match(/^https?:\\/\\//)) {\n        remoteDb = new PouchDB(url, {\n            auth: {\n                username: user,\n                password: password,\n            },\n        });\n\n        await startSync();\n    }\n}\n\n\nexport function getLocalDb() {\n    return localDb;\n}\n\nexport function getLocalConfigDb() {\n    return localConfigDb;\n}\n\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink }     from '@material-ui/core/colors';\n\n\n\nexport const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\nexport const theme = createMuiTheme({\n    palette: isDark ? {\n        type: 'dark',\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    } : {\n        type: 'light',\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    },\n});\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { History } from 'history';\n\n\n\nexport function getCurrentView(history: History<any>) {\n    let currentView = '';\n    if (history.location.pathname) {\n        if (history.location.pathname.startsWith('/kanban/')) {\n            currentView = 'kanban';\n        } else if (history.location.pathname.startsWith('/calendar/')) {\n            currentView = 'calendar';\n        } else if (history.location.pathname.startsWith('/edit/')) {\n            currentView = 'edit';\n        } else if (history.location.pathname.startsWith('/config/')) {\n            currentView = 'config';\n        }\n    }\n    return currentView;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport actionCreatorFactory,\n       { Action }             from 'typescript-fsa';\nimport { AppConfig,\n         ConfirmDialogProps,\n         AppEventsState }     from '../types';\n\n\n\nexport interface AppEventsActions {\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n\n    updateAppConfig: (v: AppConfig) =>\n        Action<AppConfig>;\n    resetApplication: () =>\n        Action<void>;\n\n    // from KanbanBoardActions\n    changeActiveBoard: (id: string) =>\n        Action<{boardId: string}>;\n    refreshActiveBoard: () =>\n        Action<{}>;\n}\n\n\nconst actionCreator = actionCreatorFactory();\n\n\nconst updateAppConfig =\n    actionCreator.async<AppConfig, AppEventsState, Error>('ACTIONS_UPDATE_APP_CONFIG');\nconst resetApplication =\n    actionCreator.async<void, AppEventsState, Error>('ACTIONS_RESET_APPLICATION');\n\n\nexport const appEventsActions = {\n    showAlertDialog: actionCreator<ConfirmDialogProps>('ACTIONS_SHOW_ALERT_DIALOG'),\n    closeAlertDialog: actionCreator<void>('ACTIONS_CLOSE_ALERT_DIALOG'),\n\n    startUpdateAppConfig: updateAppConfig.started,\n    doneUpdateAppConfig: updateAppConfig.done,\n    failedUpdateAppConfig: updateAppConfig.failed,\n\n    startResetApplication: resetApplication.started,\n    doneResetApplication: resetApplication.done,\n    failedResetApplication: resetApplication.failed,\n};\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport actionCreatorFactory,\n       { Action }                  from 'typescript-fsa';\nimport { KanbanBoardState,\n         KanbanBoardRecord,\n         KanbanRecord,\n         UpdateStickyLanesPayload,\n         ConfirmDialogProps }      from '../types';\n\n\n\nexport interface KanbanBoardActions {\n    addBoard: (boardName: string) =>\n        Action<{boardName: string}>;\n    changeActiveBoard: (id: string) =>\n        Action<{boardId: string}>;\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\n        Action<{boardId: string, boardName: string}>;\n    deleteBoard: (id: string) =>\n        Action<{boardId: string}>;\n\n    addSticky: () =>\n        Action<{}>;\n    updateSticky: (v: KanbanRecord) =>\n        Action<KanbanRecord>;\n    updateStickyLanes: (v: UpdateStickyLanesPayload) =>\n        Action<UpdateStickyLanesPayload>;\n    archiveSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    unarchiveSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    deleteSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n\n    editBoardAndStickys: (v: KanbanBoardRecord) =>\n        Action<KanbanBoardRecord>;\n\n    refreshActiveBoard: () =>\n        Action<{}>;\n\n    // from AppEventsActions\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n}\n\n\nconst actionCreator = actionCreatorFactory();\n\n\nconst addBoard =\n    actionCreator.async<{boardName: string}, KanbanBoardState, Error>('ACTIONS_ADD_BOARD');\nconst changeActiveBoard =\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_CHANGE_ACTIVE_BOARD');\nconst updateBoardName =\n    actionCreator.async<{boardId: string, boardName: string}, KanbanBoardState, Error>('ACTIONS_UPDATE_BOARD_NAME');\nconst deleteBoard =\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_BOARD');\n\nconst addSticky =\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_ADD_STICKY');\nconst updateSticky =\n    actionCreator.async<KanbanRecord, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY');\nconst updateStickyLanes =\n    actionCreator.async<UpdateStickyLanesPayload, KanbanBoardState, Error>('ACTIONS_UPDATE_STICKY_LANES');\nconst archiveSticky =\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_ARCHIVE_STICKY');\nconst unarchiveSticky =\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_UNARCHIVE_STICKY');\nconst deleteSticky =\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_STICKY');\n\nconst editBoardAndStickys =\n    actionCreator.async<KanbanBoardRecord, KanbanBoardState, Error>('ACTIONS_EDIT_BOARD_AND_STICKYS');\n\nconst refreshActiveBoard =\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_REFRESH_ACTIVE_BOARD');\n\n\nexport const kanbanBoardActions = {\n    startAddBoard: addBoard.started,\n    doneAddBoard: addBoard.done,\n    failedAddBoard: addBoard.failed,\n\n    startChangeActiveBoard: changeActiveBoard.started,\n    doneChangeActiveBoard: changeActiveBoard.done,\n    failedChangeActiveBoard: changeActiveBoard.failed,\n\n    startUpdateBoardName: updateBoardName.started,\n    doneUpdateBoardName: updateBoardName.done,\n    failedUpdateBoardName: updateBoardName.failed,\n\n    startDeleteBoard: deleteBoard.started,\n    doneDeleteBoard: deleteBoard.done,\n    failedDeleteBoard: deleteBoard.failed,\n\n    startAddSticky: addSticky.started,\n    doneAddSticky: addSticky.done,\n    failedAddSticky: addSticky.failed,\n\n    startUpdateSticky: updateSticky.started,\n    doneUpdateSticky: updateSticky.done,\n    failedUpdateSticky: updateSticky.failed,\n\n    startUpdateStickyLanes: updateStickyLanes.started,\n    doneUpdateStickyLanes: updateStickyLanes.done,\n    failedUpdateStickyLanes: updateStickyLanes.failed,\n\n    startArchiveSticky: archiveSticky.started,\n    doneArchiveSticky: archiveSticky.done,\n    failedArchiveSticky: archiveSticky.failed,\n\n    startUnarchiveSticky: unarchiveSticky.started,\n    doneUnarchiveSticky: unarchiveSticky.done,\n    failedUnarchiveSticky: unarchiveSticky.failed,\n\n    startDeleteSticky: deleteSticky.started,\n    doneDeleteSticky: deleteSticky.done,\n    failedDeleteSticky: deleteSticky.failed,\n\n    startEditBoardAndStickys: editBoardAndStickys.started,\n    doneEditBoardAndStickys: editBoardAndStickys.done,\n    failedEditBoardAndStickys: editBoardAndStickys.failed,\n\n    startRefreshActiveBoard: refreshActiveBoard.started,\n    doneRefreshActiveBoard: refreshActiveBoard.done,\n    failedRefreshActiveBoard: refreshActiveBoard.failed,\n};\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { AppConfig,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions }   from '../actions/AppEventsActions';\nimport { KanbanBoardActions as KanbanBoardActions_,\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\nexport type KanbanBoardActions = KanbanBoardActions_;\n\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n\n        updateAppConfig: (v: AppConfig) =>\n            dispatch(appEventsActions.startUpdateAppConfig(v)),\n        resetApplication: () =>\n            dispatch(appEventsActions.startResetApplication()),\n\n        // from KanbanBoardActions\n        changeActiveBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\n        refreshActiveBoard: () =>\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\n    }\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, appState.appEvents);\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\nexport function formatDate(d: Date) {\n    return `${String(d.getFullYear()).padStart(4, '0')}-${\n        String(d.getMonth() + 1).padStart(2, '0')}-${\n        String(d.getDate()).padStart(2, '0')}`;\n}\n\nexport function parseISODate(s: string) {\n    const m = s.match(/^(?:(-?\\d{4,})-(\\d{2})-(\\d{2}))|(?:(-?\\d{4,})(\\d{2})(\\d{2}))$/);\n    if (m) {\n        return new Date(Number(m[1]), Number(m[2]) - 1, Number(m[3]));\n    } else {\n        return null;\n    }\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\nexport const boardStyle =\n`/* per-board customized styles */\n/*\n.KanbanBoardView-sticky-note {width: 200px}\n.KanbanBoardView-header-cell-task-statuses {min-width: 210px}\ntable.KanbanBoardView-board tbody th {\n    padding: 10px;\n    white-space: nowrap;\n}\n*/\ntable.KanbanBoardView-board thead th.status-backlog {\n    background-color: var(--weak-header-bg-color);\n}\ntable.KanbanBoardView-board td.status-backlog {\n    background-color: var(--weak-data-bg-color);\n}\ntable.KanbanBoardView-board thead th.status-done {\n    background-color: var(--weak-header-bg-color);\n}\ntable.KanbanBoardView-board td.status-done {\n    background-color: var(--weak-data-bg-color);\n}\n.team-or-story-team-b .KanbanBoardView-sticky-note {\n    background-color: var(--sticky-blue-color);\n}\n.status-done .KanbanBoardView-sticky-note {\n    background-color: var(--sticky-green-color);\n}\n.KanbanBoardView-sticky-tags .tag-bug {\n    color: white;\n    background-color: red;\n}\n.KanbanBoardView-sticky-tags .tag-ok {\n    color: white;\n    background-color: green;\n}\n.KanbanBoardView-sticky-tags .tag-NG {\n    color: white;\n    background-color: #e91e63;\n}\n.KanbanBoardView-sticky-tags .tag-PR {\n    color: white;\n    background-color: purple;\n}\n.KanbanBoardView-sticky-tags .tag-rejected {\n    color: white;\n    background-color: #990000;\n}\n.KanbanBoardView-sticky-tags .tag-pending {\n    color: black;\n    background-color: #ff9900;\n}\n.KanbanBoardView-sticky-tags .tag-merged {\n    color: white;\n    background-color: #006666;\n}\n.KanbanBoardView-sticky-tags .tag-critical {\n    color: white;\n    background-color: red;\n}\n.KanbanBoardView-sticky-tags .tag-high {\n    color: white;\n    background-color: #ff5522;\n}\n.KanbanBoardView-sticky-tags .tag-moderate {\n    color: black;\n    background-color: #ffcc00;\n}\n.KanbanBoardView-sticky-tags .tag-low {\n    color: black;\n    background-color: #cc9900;\n}\n.KanbanBoardView-sticky-tags .tag-star {\n    color: inherit;\n    background-color: inherit;\n}\n`;\n\n\nexport const calendarStyle =\n`/* per-board customized styles */\ndiv.CalendarView-item-chip.status-done {\n    background-color: var(--sticky-green-color);\n}\n`;\n\n\nexport const boardNote =\n`# This is a board note.\n* Markdown syntax is available.\n* Go [Editor](#/edit/) to edit this note.`;\n\n\nexport const initialData = {\n    \"boards\": [{\n        \"type\": \"kanbanBoard\",\n        \"name\": \"Welcome Board\",\n        \"taskStatuses\": [{\n            \"value\": \"Backlog\",\n            \"caption\": \"🛌 Backlog\",\n            \"className\": \"status-backlog\"\n        }, {\n            \"value\": \"ToDo\",\n            \"caption\": \"📯 ToDo\",\n            \"className\": \"status-todo\"\n        }, {\n            \"value\": \"InProgress\",\n            \"caption\": \"⛏ InProgress\",\n            \"className\": \"status-inprogress\"\n        }, {\n            \"value\": \"Staging\",\n            \"caption\": \"📦 Staging\",\n            \"className\": \"status-staging\"\n        }, {\n            \"value\": \"Done\",\n            \"caption\": \"🎉 Done\",\n            \"className\": \"status-done\",\n            \"completed\": true\n        }],\n        \"teamOrStories\": [{\n            \"value\": \"Team A\",\n            \"caption\": \"🐆 Team A\",\n            \"className\": \"team-or-story-team-a\"\n        }, {\n            \"value\": \"Team B\",\n            \"caption\": \"🦃 Team B\",\n            \"className\": \"team-or-story-team-b\"\n        }, {\n            \"value\": \"Team C\",\n            \"caption\": \"🐍 Team C\",\n            \"className\": \"team-or-story-team-c\"\n        }],\n        \"tags\": [{\n            \"value\": \"bug\",\n            \"className\": \"tag-bug\"\n        }, {\n            \"value\": \"ok\",\n            \"className\": \"tag-ok\"\n        }, {\n            \"value\": \"NG\",\n            \"className\": \"tag-NG\"\n        }, {\n            \"value\": \"PR\",\n            \"className\": \"tag-PR\"\n        }, {\n            \"value\": \"rejected\",\n            \"className\": \"tag-rejected\"\n        }, {\n            \"value\": \"pending\",\n            \"className\": \"tag-pending\"\n        }, {\n            \"value\": \"merged\",\n            \"className\": \"tag-merged\"\n        }, {\n            \"value\": \"critical\",\n            \"className\": \"tag-critical\"\n        }, {\n            \"value\": \"high\",\n            \"className\": \"tag-high\"\n        }, {\n            \"value\": \"moderate\",\n            \"className\": \"tag-moderate\"\n        }, {\n            \"value\": \"low\",\n            \"className\": \"tag-low\"\n        }, {\n            \"value\": \"⭐\",\n            \"className\": \"tag-star\"\n        }, {\n            \"value\": \"⭐⭐\",\n            \"className\": \"tag-star\"\n        }, {\n            \"value\": \"⭐⭐⭐\",\n            \"className\": \"tag-star\"\n        }],\n        \"displayBarcode\": true,\n        \"displayMemo\": true,\n        \"displayFlags\": true,\n        \"displayTags\": true,\n        \"preferArchive\": false,\n        \"boardStyle\": boardStyle,\n        \"calendarStyle\": calendarStyle,\n        \"boardNote\": \"\",\n    }],\n    \"records\": [{\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Welcome to the Kanban Board App!\\n\" +\n            \"* This is a kanban (or sticky).\\n\" +\n            \"* Write one task for one kanban.\\n\" +\n            \"* To add a kanban to the board, Tap or click the “+” icon in the upper left corner of the board.\\n\" +\n            \"* Tap or click on kanban to edit.\\n\" +\n            \"* Drag and drop the kanban to change the status.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"* Board and Kanban data are stored in the browser's local “indexed DB”.\\n\" +\n            \"* You can use a remote [“CouchDB”](https://couchdb.apache.org) server to synchronize multiple device boards.\\n\" +\n            \"* You can get a fully managed CouchDB server with [“IBM Cloudant®” from IBM Cloud](https://www.ibm.com/cloud/cloudant).\\n\" +\n            \"* Create an [IBM Cloud Lite account](https://www.ibm.com/cloud/free/) and get a free tier without a credit card.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Go [Settings](#/config/) to setup\\n\\n\" +\n            \"----\\n\\n\" +\n            \"* `remote.endpointUrl`: Cloudant `External Endpoint` URL w/ DB name\\n\" +\n            \"  * e.g. `https://???-bluemix.cloudant.com/mydb`\\n\" +\n            \"* `remote.user`: Cloudant `API Key`\\n\" +\n            \"* `remote.password`: Cloudant `API Key`'s password\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"* You can customize the appearance and behavior of the board and kanban in the configuration editor view.\\n\\n\\n\" +\n            \"----\\n\\n\" +\n            \"# Go [Editor](#/edit/) to setup\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"InProgress\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"2030-01-01\",\n        \"description\":\n            \"### Hello, kanban board !\\n\\n\" +\n            \"* ~aaa~\\n\" +\n            \"  * **bbb**\\n\" +\n            \"* *ccc*\\n\\n\" +\n            \"----\\n\\n\" +\n            \"https://shellyln.github.io/\\n\\n\" +\n            \"![logo](https://shellyln.github.io/assets/image/shellyln.png)\",\n        \"barcode\": \"12345\",\n        \"memo\": \"memo\",\n        \"flags\": [\"Marked\"],\n        \"tags\": [\"PR\", \"bug\", \"ok\", \"NG\", \"rejected\", \"pending\", \"merged\", \"critical\", \"high\", \"moderate\", \"low\", \"⭐⭐⭐\"],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Staging\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# What is a Kanban Board?\\n\" +\n            \"https://www.atlassian.com/agile/kanban/boards\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# What are WIP limits?\\n\" +\n            \"https://www.atlassian.com/agile/kanban/wip-limits\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Get Started With Cloudant in IBM Cloud\\n\" +\n            \"https://developer.ibm.com/clouddataservices/docs/cloudant/get-started/\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Sign up for IBM Cloud\\n\" +\n            \"https://cloud.ibm.com/registration\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"Release Kanban board app v0.0.1\\n\\n\" +\n            \"![image](https://shellyln.github.io/knbn/images/icons/icon-32x32.png)\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [\"ok\", \"merged\", \"v0.0.1\", \"feature-something\", \"#1\", \"#2\"],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team A\",\n        \"taskStatus\": \"Done\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"2030-01-01\",\n        \"description\": \"This record is archived.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [\"Archived\"],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Backlog\"\n    }]\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { push }                   from 'connected-react-router';\nimport { KanbanBoardState,\n         KanbanBoardInitialData,\n         DocumentWithContents,\n         KanbanBoardDbRecord,\n         KanbanBoardDbRecordUserData,\n         KanbanBoardRecord,\n         KanbanRecord }           from '../types';\nimport { appEventsActions }       from '../actions/AppEventsActions';\nimport { kanbanBoardActions }     from '../actions/KanbanBoardActions';\nimport { restartSync,\n         getLocalDb }             from '../lib/db';\nimport { formatDate }             from '../lib/datetime';\nimport { getConstructedAppStore } from '../store';\nimport { initialData,\n         boardNote }              from '../data/initial-data';\n\n\n\nlet kanbanBoardReducer: ReducerBuilder<KanbanBoardState, KanbanBoardState> = null as any;\n\nexport async function getKanbanBoardReducer() {\n    if (!kanbanBoardReducer) {\n        const db = getLocalDb();\n\n        // TODO: try-catch\n        let resp: PouchDB.Core.AllDocsResponse<DocumentWithContents> = null as any;\n\n        resp = await db.allDocs({\n            include_docs: true,\n        });\n\n        if (resp.rows.length === 0) {\n            const data: KanbanBoardInitialData = initialData as any;\n\n            const postRespBoards = await db.bulkDocs([\n                ...data.boards.map(x => Object.assign({}, x, { boardNote })),\n            ], {});\n\n            const now = new Date();\n            for (const rec of data.records) {\n                rec.dueDate = formatDate(now);\n                rec.boardId = postRespBoards[0].id as string;\n            }\n            await db.bulkDocs([\n                ...data.records,\n            ], {});\n\n            resp = await db.allDocs({\n                include_docs: true,\n            });\n        }\n\n        const boards: KanbanBoardRecord[] = resp.rows\n            .filter(x => x.doc && x.doc.type === 'kanbanBoard')\n            .map(x => x.doc)\n            .sort((a: any, b: any) =>\n                String(a.name).toLocaleLowerCase() >= String(b.name).toLocaleLowerCase() ?\n                (String(a.name) === String(b.name) ? 0 : 1) : -1) as any;\n        for (const board of boards) {\n            const records: KanbanRecord[] = resp.rows\n                .filter(x => x.doc && x.doc.type === 'kanban' &&\n                    (x.doc as KanbanRecord).boardId === board._id)\n                .map(x => x.doc) as any;\n            board.records = records;\n        }\n\n        const initialState: KanbanBoardState = {\n            activeBoard: boards[0],\n            boards: boards,\n            activeBoardId: boards[0]._id,\n            activeBoardIndex: 0,\n        };\n\n        const getKanbanBoardStateFromDb = async (state: KanbanBoardState, boardId: string) => {\n            const board = await db.get<KanbanBoardRecord>(boardId, {});\n            if (! board) {\n                return state;\n            }\n            const records: KanbanRecord[] = (await db.find({selector: {\n                type: 'kanban',\n                boardId: board._id,\n            }})).docs as any;\n        \n            board.records = records;\n            const index = Math.max(0, state.boards.findIndex(x => x._id === board._id));\n            const boards = state.boards.slice(0, index).concat(\n                [board],\n                state.boards.slice(index + 1),\n            );\n\n            return (Object.assign({}, state, {\n                boards,\n                activeBoardId: board._id,\n                activeBoard: board,\n                activeBoardIndex: index,\n            }));\n        }\n\n        kanbanBoardReducer = reducerWithInitialState(initialState)\n            //// addBoard async actions ////\n            .case(kanbanBoardActions.startAddBoard, (state, payload) => {\n                const data: KanbanBoardInitialData = initialData as any;\n                const board: KanbanBoardDbRecordUserData = {\n                    type: 'kanbanBoard',\n                    name: payload.boardName,\n                    taskStatuses: data.boards[0].taskStatuses,\n                    teamOrStories: data.boards[0].teamOrStories,\n                    tags: data.boards[0].tags,\n                    displayBarcode: data.boards[0].displayBarcode,\n                    displayMemo: data.boards[0].displayMemo,\n                    displayFlags: data.boards[0].displayFlags,\n                    displayTags: data.boards[0].displayTags,\n                    preferArchive: data.boards[0].preferArchive,\n                    boardStyle: data.boards[0].boardStyle,\n                    calendarStyle: data.boards[0].calendarStyle,\n                    boardNote: data.boards[0].boardNote,\n                };\n                db.post(board, {})\n                .then(v => {\n                    const saved: KanbanBoardRecord = board as any;\n                    saved._id = v.id;\n                    saved._rev = v.rev;\n                    saved.records = [];\n                    state.boards = state.boards.concat([saved]);\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddBoard({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoardId: v.id, activeBoard: saved }),\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(push(`/kanban/${v.id}`));\n                    }, 30);\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddBoard({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to add board: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n                return state;\n            })\n            .case(kanbanBoardActions.doneAddBoard, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedAddBoard, (state, arg) => {\n                return state;\n            })\n\n            //// changeActiveBoard async actions ////\n            .case(kanbanBoardActions.startChangeActiveBoard, (state, payload) => {\n                (async () => {\n                    try {\n                        const newState = await getKanbanBoardStateFromDb(state, payload.boardId);\n\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneChangeActiveBoard({\n                            params: payload,\n                            result: newState,\n                        }));\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedChangeActiveBoard({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Failed to change active board: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => {\n                                    getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog());\n                                    setTimeout(() => {\n                                        getConstructedAppStore().dispatch(push(`/kanban/`));\n                                    }, 500);\n                                },\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneChangeActiveBoard, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedChangeActiveBoard, (state, arg) => {\n                return state;\n            })\n\n            //// updateBoardName async actions ////\n            .case(kanbanBoardActions.startUpdateBoardName, (state, payload) => {\n                (async () => {\n                    try {\n                        const dbBoard = await db.get<KanbanBoardRecord>(payload.boardId);\n                        if (! dbBoard) {\n                            return state;\n                        }\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: dbBoard._id,\n                        }})).docs as any;\n\n                        const change = Object.assign({}, dbBoard, { name: payload.boardName });\n                        const saved = await db.put(change, {});\n\n                        change.records = records;\n                        change._id = saved.id;\n                        change._rev = saved.rev;\n\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\n                        const board = Object.assign({}, state.boards[index] || {}, change);\n\n                        const boards = index >= 0 ?\n                            state.boards.slice(0, index).concat(\n                                [board],\n                                state.boards.slice(index + 1),\n                            ) : state.boards;\n\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateBoardName({\n                            params: payload,\n                            result: Object.assign({}, state, {\n                                boards,\n                                activeBoardId: board._id,\n                                activeBoard: board,\n                            }),\n                        }));\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateBoardName({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Failed to change board name: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateBoardName, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateBoardName, (state, arg) => {\n                return state;\n            })\n\n            //// deleteBoard async actions ////\n            .case(kanbanBoardActions.startDeleteBoard, (state, payload) => {\n                (async () => {\n                    try {\n                        if (state.boards.length <= 1) {\n                            return state;\n                        }\n                        const dbBoard = await db.get<KanbanBoardDbRecord>(payload.boardId);\n                        if (! dbBoard) {\n                            return state;\n                        }\n\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: payload.boardId,\n                        }})).docs as any;\n\n                        for (const record of records) {\n                            await db.remove(record, {});\n                        }\n\n                        await db.remove(dbBoard, {});\n\n                        const activeBoardId = state.activeBoardId === payload.boardId ?\n                            state.boards[0]._id : state.activeBoardId;\n                        const newState = await getKanbanBoardStateFromDb(state, activeBoardId);\n\n                        const index = newState.boards.findIndex(x => x._id === payload.boardId);\n\n                        const boards = index >= 0 ?\n                            newState.boards.slice(0, index).concat(\n                                newState.boards.slice(index + 1),\n                            ) : newState.boards;\n\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteBoard({\n                                params: payload,\n                                result: Object.assign({}, state, {\n                                    boards,\n                                    activeBoardId,\n                                    activeBoard: newState.activeBoard,\n                                    activeBoardIndex: newState.boards.findIndex(x => x._id === activeBoardId),\n                                }),\n                            }));\n                            setTimeout(() => {\n                                getConstructedAppStore().dispatch(push(`/kanban/${activeBoardId}`));\n                                setTimeout(() => {\n                                    getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                        open: true,\n                                        title: 'Done',\n                                        message: 'Board is deleted successfully',\n                                        singleButton: true,\n                                        onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                                    }));\n                                }, 30);\n                            }, 30);\n                        }, 30);\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteBoard({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Failed to delete board: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneDeleteBoard, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedDeleteBoard, (state, arg) => {\n                return state;\n            })\n\n            //// addSticky async actions ////\n            .case(kanbanBoardActions.startAddSticky, (state, payload) => {\n                const now = new Date();\n                const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n                const change: KanbanRecord = {\n                    type: 'kanban',\n                    dueDate: formatDate(today),\n                    description: '# Untitled',\n                    barcode: '',\n                    memo: '',\n                    flags: [],\n                    tags: [],\n                    boardId: state.activeBoardId,\n                    taskStatus: state.activeBoard.taskStatuses[0].value,\n                    teamOrStory: state.activeBoard.teamOrStories[0].value,\n                } as any;\n\n                const records = state.activeBoard.records.concat([change]);\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.post(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddSticky({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddSticky({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to add sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneAddSticky, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedAddSticky, (state, arg) => {\n                return state;\n            })\n\n            //// updateSticky async actions ////\n            .case(kanbanBoardActions.startUpdateSticky, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload._id);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index], {\n                    dueDate: payload.dueDate,\n                    description: payload.description,\n                    barcode: payload.barcode,\n                    memo: payload.memo,\n                    tags: payload.tags,\n                    flags: payload.flags,\n                    taskStatus: payload.taskStatus,\n                    teamOrStory: payload.teamOrStory,\n                });\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateSticky({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateSticky({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to save the sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateSticky, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateSticky, (state, arg) => {\n                return state;\n            })\n\n            //// updateStickyLanes async actions ////\n            .case(kanbanBoardActions.startUpdateStickyLanes, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index], {\n                    taskStatus: payload.taskStatusValue,\n                    teamOrStory: payload.teamOrStoryValue,\n                });\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateStickyLanes({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateStickyLanes({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to save the sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateStickyLanes, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateStickyLanes, (state, arg) => {\n                return state;\n            })\n\n            //// archiveSticky async actions ////\n            .case(kanbanBoardActions.startArchiveSticky, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index]);\n                change.flags = (change.flags || []).filter(x => x !== 'Archived');\n                change.flags.push('Archived');\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneArchiveSticky({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedArchiveSticky({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to archive the sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneArchiveSticky, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedArchiveSticky, (state, arg) => {\n                return state;\n            })\n\n            //// unarchiveSticky async actions ////\n            .case(kanbanBoardActions.startUnarchiveSticky, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index]);\n                change.flags = (change.flags || []).filter(x => x !== 'Archived');\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUnarchiveSticky({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUnarchiveSticky({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to unarchive the sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneUnarchiveSticky, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUnarchiveSticky, (state, arg) => {\n                return state;\n            })\n\n            //// deleteSticky async actions ////\n            .case(kanbanBoardActions.startDeleteSticky, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = state.activeBoard.records[index];\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.remove(change, {})\n                .then(v => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteSticky({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteSticky({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to delete the sticky: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneDeleteSticky, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedDeleteSticky, (state, arg) => {\n                return state;\n            })\n\n            //// editBoardAndStickys async actions ////\n            .case(kanbanBoardActions.startEditBoardAndStickys, (state, payload) => {\n                (async () => {\n                    try {\n                        const index = state.boards.findIndex(x => x._id === payload._id);\n                        if (index < 0) {\n                            return state;\n                        }\n\n                        const change = Object.assign({}, state.boards[index], {\n                            name: payload.name || 'Untitled',\n                            taskStatuses: payload.taskStatuses || initialData.boards[0].taskStatuses,\n                            teamOrStories: payload.teamOrStories || initialData.boards[0].teamOrStories,\n                            tags: payload.tags || [],\n                            displayBarcode: !!payload.displayBarcode,\n                            displayMemo: !!payload.displayMemo,\n                            displayFlags: !!payload.displayFlags,\n                            displayTags: !!payload.displayTags,\n                            preferArchive: !!payload.preferArchive,\n                            boardStyle: payload.boardStyle || '',\n                            calendarStyle: payload.calendarStyle || '',\n                            boardNote: payload.boardNote || '',\n                        });\n\n                        const v = await db.put(change, {});\n                        change._id = v.id;\n                        change._rev = v.rev;\n\n                        const boards = state.boards.slice(0, index).concat(\n                            [change],\n                            state.boards.slice(index + 1),\n                        );\n                        let activeBoard = change._id === state.activeBoard._id ? change : state.activeBoard;\n\n                        // TODO: sticky records\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: change._id,\n                        }})).docs as any;\n\n                        const recordsNew: KanbanRecord[] = [];\n                        for (const rec of payload.records || []) {\n                            const recDb = records.find(x => x._id === rec._id);\n                            let recNew: KanbanRecord = null as any;\n                            if (recDb) {\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id, _rev: recDb._rev });\n                                const resp = await db.put(recNew, {});\n                                recNew._id = resp.id;\n                                recNew._rev = resp.rev;\n                            } else {\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id });\n                                delete recNew._id;\n                                delete recNew._rev;\n                                const resp = await db.post(recNew, {});\n                                recNew._id = resp.id;\n                                recNew._rev = resp.rev;\n                            }\n                            recordsNew.push(recNew);\n                        }\n                        for (const recDb of records) {\n                            const recNew = recordsNew.find(x => x._id === recDb._id);\n                            if (! recNew) {\n                                await db.remove(recDb, {});\n                            }\n                        }\n                        change.records = recordsNew;\n\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneEditBoardAndStickys({\n                            params: payload,\n                            result: Object.assign({}, state, {\n                                boards,\n                                activeBoardId: activeBoard._id,\n                                activeBoard: activeBoard,\n                            }),\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Done',\n                                message: 'Board is saved successfully',\n                                singleButton: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedEditBoardAndStickys({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Failed to save the board: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneEditBoardAndStickys, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedEditBoardAndStickys, (state, arg) => {\n                return state;\n            })\n\n            //// refreshActiveBoard async actions ////\n            .case(kanbanBoardActions.startRefreshActiveBoard, (state, payload) => {\n                (async () => {\n                    try {\n                        const newState = await getKanbanBoardStateFromDb(state, state.activeBoard._id);\n\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneRefreshActiveBoard({\n                            params: payload,\n                            result: newState,\n                        }));\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedRefreshActiveBoard({\n                            params: payload,\n                            error: e,\n                        }));\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneRefreshActiveBoard, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedRefreshActiveBoard, (state, arg) => {\n                return state;\n            })\n            ;\n    }\n    return kanbanBoardReducer;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport actionCreatorFactory,\n       { Action }             from 'typescript-fsa';\nimport { KanbanRecord,\n         ConfirmDialogProps } from '../types';\n\n\n\nexport interface CalendarActions {\n    showToday: () =>\n        Action<void>;\n    showNextMonth: () =>\n        Action<void>;\n    showPreviousMonth: () =>\n        Action<void>;\n    showNextYear: () =>\n        Action<void>;\n    showPreviousYear: () =>\n        Action<void>;\n\n    // from KanbanBoardActions\n    changeActiveBoard: (id: string) =>\n        Action<{boardId: string}>;\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\n        Action<{boardId: string, boardName: string}>;\n    updateSticky: (v: KanbanRecord) =>\n        Action<KanbanRecord>;\n    archiveSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    unarchiveSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    deleteSticky: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n\n    // from AppEventsActions\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n}\n\n\nconst actionCreator = actionCreatorFactory();\n\nexport const calendarActions = {\n    showToday: actionCreator<void>('ACTIONS_SHOW_TODAY'),\n    showNextMonth: actionCreator<void>('ACTIONS_SHOW_NEXT_MONTH'),\n    showPreviousMonth: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_MONTH'),\n    showNextYear: actionCreator<void>('ACTIONS_SHOW_NEXT_YEAR'),\n    showPreviousYear: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_YEAR'),\n};\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { CalendarState }          from '../types';\nimport { calendarActions }        from '../actions/CalendarActions';\n\n\n\nlet calendarReducer: ReducerBuilder<CalendarState, CalendarState> = null as any;\n\nexport async function getCalendarReducer() {\n    if (!calendarReducer) {\n        const initialState: CalendarState = {\n            activeMonth: new Date(), // TODO: not impl\n        };\n        calendarReducer = reducerWithInitialState(initialState)\n            .case(calendarActions.showToday, (state) => {\n                const now = new Date();\n                const m = new Date(now.getFullYear(), now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showNextMonth, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showPreviousMonth, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showNextYear, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear() + 1, now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showPreviousYear, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear() - 1, now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            ;\n    }\n    return calendarReducer;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { AppEventsState }         from '../types';\nimport { appEventsActions }       from '../actions/AppEventsActions';\nimport { getLocalConfigDb,\n         getLocalDb,\n         setRemoteDb }            from '../lib/db';\nimport { getConstructedAppStore } from '../store';\n\n\n\nlet appEventsReducer: ReducerBuilder<AppEventsState, AppEventsState> = null as any;\n\nexport async function getAppEventsReducer() {\n    if (!appEventsReducer) {\n        const confDb = getLocalConfigDb();\n        const db = getLocalDb();\n\n        // TODO: try-catch\n        let resp: PouchDB.Core.AllDocsResponse<{}> = null as any;\n\n        resp = await confDb.allDocs({\n            include_docs: true,\n        });\n\n        const defaultAppConfig = {\n            remote: {\n                endpointUrl: '',\n                user: '',\n                password: '',\n            },\n            display: {\n                autoUpdate: false,\n                autoUpdateInterval: 2419200,\n            },\n        };\n\n        if (resp.rows.length === 0) {\n            await confDb.post({\n                type: 'appConfig',\n                ...defaultAppConfig,\n            }, {});\n\n            resp = await confDb.allDocs({\n                include_docs: true,\n            });\n        }\n\n        const initialState: AppEventsState = {\n            alertDialog: {\n                open: false,\n                title: '',\n                message: '',\n                onClose: () => void 0,\n            },\n            appConfig: {\n                ...defaultAppConfig,\n                ...resp.rows[0].doc,\n            } as any,\n        };\n\n        if (initialState.appConfig.remote && initialState.appConfig.remote.endpointUrl) {\n            setRemoteDb(\n                initialState.appConfig.remote.endpointUrl,\n                initialState.appConfig.remote.user || '',\n                initialState.appConfig.remote.password || '',\n            )\n            .then(() => {\n                //\n            })\n            .catch(err => {\n                alert('Failed to connect to the remote DB: ' + err.message);\n            });\n        } else {\n            setRemoteDb('', '', '')\n            .then(() => {\n                //\n            })\n            .catch(err => {\n                alert('Failed to connect to the remote DB: ' + err.message);\n            });\n        }\n\n        appEventsReducer = reducerWithInitialState(initialState)\n            .case(appEventsActions.showAlertDialog, (state, payload) => {\n                return Object.assign({}, state, {\n                    alertDialog: payload,\n                });\n            })\n            .case(appEventsActions.closeAlertDialog, (state) => {\n                return Object.assign({}, state, {\n                    alertDialog: initialState,\n                });\n            })\n\n            //// updateAppConfig async actions ////\n            .case(appEventsActions.startUpdateAppConfig, (state, payload) => {\n                const newConf = Object.assign({}, state.appConfig,\n                    payload.remote && payload.remote.endpointUrl ?\n                        { remote: payload.remote } :\n                        { remote: defaultAppConfig.remote },\n                    payload.display ?\n                        { display: payload.display } :\n                        { display: defaultAppConfig.display }\n                );\n\n                confDb.put(newConf, {})\n                .then(v => {\n                    newConf._id = v.id;\n                    newConf._rev = v.rev;\n\n                    getConstructedAppStore().dispatch(appEventsActions.doneUpdateAppConfig({\n                        params: payload,\n                        result: Object.assign({}, state, { appConfig: newConf }),\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Done',\n                            message: 'Settings is saved successfully',\n                            singleButton: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n\n                    if (newConf.remote.endpointUrl) {\n                        setRemoteDb(\n                            newConf.remote.endpointUrl,\n                            newConf.remote.user,\n                            newConf.remote.password,\n                        )\n                        .then(() => {\n                            //\n                        })\n                        .catch(err => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Failed to connect to the remote DB: ' + err.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        });\n                    }\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(appEventsActions.failedUpdateAppConfig({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Failed to update settings: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\n                return arg.result;\n            })\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\n                return state;\n            })\n\n            //// resetApplication async actions ////\n            .case(appEventsActions.startResetApplication, (state) => {\n                (async () => {\n                    try {\n                        try {\n                            await setRemoteDb('', '', '');\n                        } catch (e) {\n                            alert(e);\n                        }\n                        try {\n                            await db.destroy({});\n                        } catch (e) {\n                            alert(e);\n                        }\n                        try {\n                            await confDb.destroy({});\n                        } catch (e) {\n                            alert(e);\n                        }\n\n                        alert('All app data and configurations are removed. Please reload page.');\n\n                        getConstructedAppStore().dispatch(appEventsActions.doneResetApplication({\n                            result: state,\n                        }));\n                    } catch (e) {\n                        alert(e);\n                        getConstructedAppStore().dispatch(appEventsActions.failedResetApplication({\n                            error: e,\n                        }));\n                    }\n                })();\n\n                return state;\n            })\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\n                return arg.result;\n            })\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\n                return state;\n            })\n            ;\n    }\n    return appEventsReducer;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { createStore,\n         combineReducers, \n         applyMiddleware,\n         compose,\n         Store,\n         AnyAction }             from 'redux';\nimport { createHashHistory }     from 'history';\nimport { connectRouter,\n         routerMiddleware }      from 'connected-react-router';\nimport { AppState }              from './types';\nimport { getKanbanBoardReducer } from './states/KanbanBoardState';\nimport { getCalendarReducer }    from './states/CalendarState';\nimport { getAppEventsReducer }   from './states/AppEventsState';\n\n\n\nexport const history = createHashHistory({\n    hashType: 'slash',\n});\n\n\nlet store: Store<AppState, AnyAction> = null as any;\n\n\nexport function getConstructedAppStore() {\n    return store;\n}\n\n\nexport default async function getAppStore() {\n    if (!store) {\n        store = createStore(\n            combineReducers<AppState>({\n                router: connectRouter(history),\n                appEvents: await getAppEventsReducer(),\n                kanbanBoard: await getKanbanBoardReducer(),\n                calendar: await getCalendarReducer(),\n            }),\n            compose(\n                applyMiddleware(\n                    routerMiddleware(history),\n                ),\n            ),\n        );\n    }\n    return store;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { KanbanBoardRecord,\n         KanbanRecord,\n         UpdateStickyLanesPayload,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions } from '../actions/AppEventsActions';\nimport { KanbanBoardActions as KanbanBoardActions_,\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\nexport type KanbanBoardActions = KanbanBoardActions_;\n\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        addBoard: (boardName: string) =>\n            dispatch(kanbanBoardActions.startAddBoard({ boardName })),\n        changeActiveBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\n        deleteBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startDeleteBoard({ boardId })),\n\n        addSticky: () =>\n            dispatch(kanbanBoardActions.startAddSticky({})),\n        updateSticky: (v: KanbanRecord) =>\n            dispatch(kanbanBoardActions.startUpdateSticky(v)),\n        updateStickyLanes: (v: UpdateStickyLanesPayload) =>\n            dispatch(kanbanBoardActions.startUpdateStickyLanes(v)),\n        archiveSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\n        unarchiveSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startUnarchiveSticky({ kanbanId })),\n        deleteSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startDeleteSticky({ kanbanId })),\n\n        editBoardAndStickys: (v: KanbanBoardRecord) =>\n            dispatch(kanbanBoardActions.startEditBoardAndStickys(v)),\n\n        refreshActiveBoard: () =>\n            dispatch(kanbanBoardActions.startRefreshActiveBoard({})),\n\n        // from AppEventsActions\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n    };\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, appState.kanbanBoard);\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\n\nlet gensymSeed = 0;\n\nexport default function gensym(): string {\n    return `$$gensym$$_xjKvAjFXoVtro45V_${gensymSeed++}$$`;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                    from 'react';\nimport Button                   from '@material-ui/core/Button';\nimport TextField                from '@material-ui/core/TextField';\nimport Dialog                   from '@material-ui/core/Dialog';\nimport DialogActions            from '@material-ui/core/DialogActions';\nimport DialogContent            from '@material-ui/core/DialogContent';\nimport DialogContentText        from '@material-ui/core/DialogContentText';\nimport DialogTitle              from '@material-ui/core/DialogTitle';\nimport CheckIcon                from '@material-ui/icons/Check';\nimport CancelIcon               from '@material-ui/icons/Cancel';\nimport { useTheme }             from '@material-ui/core/styles';\nimport gensym                   from '../lib/gensym';\nimport { TextInputDialogProps } from '../types';\n\n\n\nconst TextInputDialog: React.FC<TextInputDialogProps> = (props) => {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(props.open);\n    const [value, setValue] = React.useState(props.value);\n\n    const formDialogTitleId = gensym();\n\n    function handleCancelClick() {\n        setOpen(false);\n        props.onClose(false);\n    }\n\n    function handleApplyClick() {\n        setOpen(false);\n        props.onClose(true, value);\n    }\n\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setValue(event.target.value);\n    }\n\n    return (\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n            <DialogTitle id={formDialogTitleId}>{props.title}</DialogTitle>\n            <DialogContent>\n                {props.message ?\n                    <DialogContentText>{props.message}</DialogContentText> :\n                    <></>\n                }\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label={props.fieldLabel}\n                    fullWidth\n                    value={value}\n                    error={props.validator ? props.validator(value) : false}\n                    onChange={handleValueChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    color=\"default\"\n                    onClick={handleCancelClick}>\n                    <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\n                    disabled={props.validator ? props.validator(value) : false}\n                    onClick={handleApplyClick}>\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default TextInputDialog;\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                  from 'react';\nimport { connect }            from 'react-redux';\nimport { withRouter,\n         RouteChildrenProps } from 'react-router';\nimport Drawer                 from '@material-ui/core/Drawer';\nimport Divider                from '@material-ui/core/Divider';\nimport IconButton             from '@material-ui/core/IconButton';\nimport ChevronLeftIcon        from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon       from '@material-ui/icons/ChevronRight';\nimport AddBoxIcon             from '@material-ui/icons/AddBox';\nimport TableChartIcon         from '@material-ui/icons/TableChart';\nimport CalendarTodayIcon      from '@material-ui/icons/CalendarToday';\nimport EditIcon               from '@material-ui/icons/Edit';\nimport SettingsIcon           from '@material-ui/icons/Settings';\nimport HelpIcon               from '@material-ui/icons/Help';\nimport ExpandLessIcon         from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon         from '@material-ui/icons/ExpandMore';\nimport Collapse               from '@material-ui/core/Collapse';\nimport List                   from '@material-ui/core/List';\nimport ListSubheader          from '@material-ui/core/ListSubheader';\nimport ListItem               from '@material-ui/core/ListItem';\nimport ListItemIcon           from '@material-ui/core/ListItemIcon';\nimport ListItemText           from '@material-ui/core/ListItemText';\nimport { makeStyles }         from '@material-ui/core/styles';\nimport useMediaQuery          from '@material-ui/core/useMediaQuery';\nimport clsx                   from 'clsx';\nimport { KanbanBoardState }   from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions } from '../dispatchers/KanbanBoardDispatcher';\nimport { getCurrentView }     from '../lib/util';\nimport TextInputDialog        from '../components/TextInputDialog';\n\n\n\ntype AppDrawerProps = KanbanBoardState & KanbanBoardActions & RouteChildrenProps<{}>;\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(6) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(6) + 1,\n        },\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\n\nconst AppDrawer: React.FC<AppDrawerProps> = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogAddNewBoard,\n    });\n    const [boardsOpen, setBoardsOpen] = React.useState(true);\n    const matchesPrint = useMediaQuery('print');\n\n    function handleDrawerToggle() {\n        setOpen(!open);\n    }\n\n    function handleClickChangeActiveBoard(id: string) {\n        let view = 'kanban';\n        if (props.history.location.pathname) {\n            if (props.history.location.pathname.startsWith('/calendar/')) {\n                view = 'calendar';\n            } else if (props.history.location.pathname.startsWith('/edit/')) {\n                view = 'edit';\n            }\n        }\n        props.history.push(`/${view}/${id}`);\n    }\n\n    function handleClickAddNewBoard() {\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'New board',\n            message: '',\n            fieldLabel: 'Board name',\n            value: '',\n        }));\n    }\n    \n    function handleCloseDialogAddNewBoard(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            props.addBoard(value);\n        }\n    }\n\n    function handleChangeView(viewName: string, id: string) {\n        if (id === props.activeBoardId) {\n            props.history.push(`/${viewName}/${id}`);\n        }\n    }\n\n    function handleBoardsOpenClick() {\n        setBoardsOpen(!boardsOpen);\n    }\n\n    let currentView = getCurrentView(props.history);\n\n    return (\n        <>\n            {!matchesPrint ?\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                    anchor=\"left\"\n                    open={open}\n                    >\n                    <div className={''}>\n                        <IconButton onClick={handleDrawerToggle}>\n                            {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    {open ?\n                        <>\n                            <List\n                                component=\"nav\"\n                                aria-labelledby=\"nested-list-subheader\"\n                                subheader={\n                                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                        Boards\n                                    </ListSubheader>\n                                }>\n                                <ListItem button\n                                    onClick={handleBoardsOpenClick}>\n                                    {boardsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                                </ListItem>\n                                <Collapse in={boardsOpen} timeout=\"auto\" unmountOnExit>\n                                    <List component=\"div\" disablePadding>\n                                        {props.boards.map(x =>\n                                            <ListItem button\n                                                    key={x._id}\n                                                    selected={x._id === props.activeBoardId}\n                                                    className={clsx(classes.nested)}\n                                                    style={{fontWeight: x._id === props.activeBoardId ? 'bold' : 'normal'}}\n                                                    onClick={ev => handleClickChangeActiveBoard(x._id)} >\n                                                <ListItemText\n                                                    primary={x.name} />\n                                            </ListItem>\n                                        )}\n                                    </List>\n                                </Collapse>\n                            </List>\n                            <ListItem button\n                                onClick={handleClickAddNewBoard}>\n                                <ListItemIcon><AddBoxIcon /></ListItemIcon>\n                                <ListItemText primary=\"New board...\" />\n                            </ListItem>\n                            <Divider />\n                        </> :\n                        <></>\n                    }\n                    <List>\n                        {/* settings */}\n                        <ListItem button\n                                selected={currentView === 'kanban' || currentView === ''}\n                                onClick={ev => handleChangeView('kanban', props.activeBoardId)}>\n                            <ListItemIcon><TableChartIcon /></ListItemIcon>\n                            {open ? <ListItemText primary=\"Kanban\" /> : <></>}\n                        </ListItem>\n                        <ListItem button\n                                selected={currentView === 'calendar'}\n                                onClick={ev => handleChangeView('calendar', props.activeBoardId)}>\n                            <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\n                            {open ? <ListItemText primary=\"Calendar\" /> : <></>}\n                        </ListItem>\n                        <ListItem button\n                                selected={currentView === 'edit'}\n                                onClick={ev => handleChangeView('edit', props.activeBoardId)}>\n                            <ListItemIcon><EditIcon /></ListItemIcon>\n                            {open ? <ListItemText primary=\"Editor\" /> : <></>}\n                        </ListItem>\n                    </List>\n                    {open ?\n                        <>\n                            <Divider />\n                            <ListItem button\n                                    selected={currentView === 'config'}\n                                    onClick={ev => props.history.push(`/config/`)}>\n                                <ListItemIcon><SettingsIcon /></ListItemIcon>\n                                {open ? <ListItemText primary=\"Settings\" /> : <></>}\n                            </ListItem>\n                            <List>\n                                <ListItem button\n                                        onClick={ev => window.open('https://github.com/shellyln/kanban-board-app#tips', '_blank')}>\n                                    <ListItemIcon><HelpIcon /></ListItemIcon>\n                                    {open ? <ListItemText primary=\"Help\" /> : <></>}\n                                </ListItem>\n                            </List>\n                        </> :\n                        <></>\n                    }\n                </Drawer> :\n                <></>\n            }\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </>\n    );\n}\nexport default (withRouter(connect(mapStateToProps, mapDispatchToProps)(AppDrawer) as any) as any) as React.FC;\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                  from 'react';\nimport Button                 from '@material-ui/core/Button';\nimport TextField              from '@material-ui/core/TextField';\nimport Dialog                 from '@material-ui/core/Dialog';\nimport DialogActions          from '@material-ui/core/DialogActions';\nimport DialogContent          from '@material-ui/core/DialogContent';\nimport DialogContentText      from '@material-ui/core/DialogContentText';\nimport DialogTitle            from '@material-ui/core/DialogTitle';\nimport CheckIcon              from '@material-ui/icons/Check';\nimport CancelIcon             from '@material-ui/icons/Cancel';\nimport { useTheme }           from '@material-ui/core/styles';\nimport gensym                 from '../lib/gensym';\nimport { ConfirmDialogProps } from '../types';\n\n\n\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = (props) => {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(props.open);\n    const [inputValue, setInputValue] = React.useState('');\n\n    const formDialogTitleId = gensym();\n\n    function handleCancelClick() {\n        setOpen(false);\n        props.onClose(false);\n    }\n\n    function handleApplyClick() {\n        if (props.confirmingTextValue && props.confirmingTextValue !== inputValue) {\n            return;\n        }\n        setOpen(false);\n        props.onClose(true);\n    }\n\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setInputValue(event.target.value);\n    }\n\n    return (\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n            {props.fab ? props.fab : <></>}\n            <DialogTitle id={formDialogTitleId} style={{textAlign: 'center'}}>{props.title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{textAlign: 'center'}}>\n                    {(props.message || '').split('\\n').map((x, index, arr) =>\n                        <span key={'content-' + index}>\n                            {x}\n                            {index <= (arr.length - 1) ? <br/> : <></>}\n                        </span>)\n                    }\n                </DialogContentText>\n            </DialogContent>\n            {props.confirmingTextValue ?\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label={props.confirmingTextLabel}\n                    value={inputValue}\n                    onChange={handleValueChange}\n                    style={{marginLeft: theme.spacing(1), marginRight: theme.spacing(1), marginBottom: theme.spacing(1)}}\n                    /> :\n                    <></>\n            }\n            <DialogActions style={{margin: 'auto'}}>\n                {!props.singleButton?\n                    <Button\n                        variant=\"outlined\"\n                        color=\"default\"\n                        onClick={handleCancelClick} >\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Cancel'}\n                    </Button> :\n                    <></>\n                }\n                <Button\n                    variant=\"contained\"\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\n                    disabled={props.confirmingTextValue ? inputValue !== props.confirmingTextValue : false}\n                    onClick={handleApplyClick} >\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Apply'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default ConfirmDialog;\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\n\nimport { parserInput }        from 'fruitsconfits/modules/lib/types';\nimport { formatErrorMessage } from 'fruitsconfits/modules/lib/parser';\nimport { getStringParsers }   from 'fruitsconfits/modules/lib/string-parser';\n\n\n\ntype Ctx = undefined;\ntype Ast = string | string[];\n\n\nconst $s = getStringParsers<Ctx, Ast>({\n    rawToToken: rawToken => rawToken,\n    concatTokens: tokens => (tokens.length ?\n        [tokens.reduce((a, b) => a as string + b as string)] : []),\n});\n\nconst {seq, cls, notCls, classes, cat,\n        repeat, end, first, combine, erase, trans, ahead,\n        makeProgram} = $s;\n\n\nconst quoted = trans(input => input.length ? input : [''])(\n    erase(repeat(classes.spaceWithinSingleLine), cls('\"')),\n    cat(repeat(first(\n        trans(input => ['\"'])(seq('\"\"')),\n        notCls('\"'), ))),\n    erase(cls('\"'), repeat(erase(classes.spaceWithinSingleLine))), );\n\nconst nakid = trans(input => input.length ? input : [''])(\n    erase(repeat(classes.spaceWithinSingleLine)),\n    cat(repeat(first(\n        erase(classes.spaceWithinSingleLine, ahead(cls(',', '\\r\\n', '\\n', '\\r'))),\n        notCls(',', '\\r\\n', '\\n', '\\r'), ))));\n\nconst cell = first(quoted, nakid);\n\nconst row = trans(input => [input as string[]])(\n    cell,\n    repeat(combine(erase(seq(',')), cell)), );\n\nconst rows = makeProgram(combine(\n    row,\n    repeat(combine(erase(classes.newline), row)),\n    end(), ));\n\n\nexport function parse(s: string) {\n    const z = rows(parserInput(s));\n    if (! z.succeeded) {\n        throw new Error(formatErrorMessage(z));\n    }\n    return z.tokens as string[][];\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                      from 'react';\nimport                                 'date-fns';\nimport DateFnsUtils               from '@date-io/date-fns';\nimport { MaterialUiPickersDate }  from '@material-ui/pickers/typings/date';\nimport { MuiPickersUtilsProvider,\n         KeyboardDatePicker }     from '@material-ui/pickers';\nimport Button                     from '@material-ui/core/Button';\nimport TextField                  from '@material-ui/core/TextField';\nimport Select                     from '@material-ui/core/Select';\nimport MenuItem                   from '@material-ui/core/MenuItem';\nimport InputLabel                 from '@material-ui/core/InputLabel';\nimport FormControl                from '@material-ui/core/FormControl';\nimport Dialog                     from '@material-ui/core/Dialog';\nimport DialogActions              from '@material-ui/core/DialogActions';\nimport DialogContent              from '@material-ui/core/DialogContent';\nimport DialogTitle                from '@material-ui/core/DialogTitle';\nimport Typography                 from '@material-ui/core/Typography';\nimport Fab                        from '@material-ui/core/Fab';\nimport ArchiveIcon                from '@material-ui/icons/Archive';\nimport UnarchiveIcon              from '@material-ui/icons/Unarchive';\nimport DeleteIcon                 from '@material-ui/icons/Delete';\nimport CheckIcon                  from '@material-ui/icons/Check';\nimport CancelIcon                 from '@material-ui/icons/Cancel';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport clsx                       from 'clsx';\nimport gensym                     from '../lib/gensym';\nimport { KanbanDialogProps }      from '../types';\nimport { formatDate,\n         parseISODate }           from '../lib/datetime';\nimport ConfirmDialog              from '../components/ConfirmDialog';\nimport { parse as parseCsv }      from '../lib/csv';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        minWidth: 220,\n    },\n    icon: {\n        margin: theme.spacing(1),\n        fontSize: 26,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n}));\n\n\nconst KanbanDialog: React.FC<KanbanDialogProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [open, setOpen] = React.useState(props.open);\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\n    const [description, setDescription] = React.useState(props.record.description);\n    const [barcode, setBarcode] = React.useState(props.record.barcode);\n    const [memo, setMemo] = React.useState(props.record.memo);\n    const [tags, setTags] = React.useState(props.record.tags ?\n        props.record.tags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\n    const [flags, setFlags] = React.useState(props.record.flags ?\n        props.record.flags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\n    const [dueDate, setDueDate] = React.useState<MaterialUiPickersDate>(parseISODate(props.record.dueDate));\n    const [taskStatus, setTaskStatus] = React.useState(props.record.taskStatus);\n    const [teamOrStory, setTeamOrStory] = React.useState(props.record.teamOrStory);\n\n    const formDialogTitleId = gensym();\n    const taskStatusesId = gensym();\n    const teamOrStoryId = gensym();\n\n    const archived = props.record.flags ? props.record.flags.includes('Archived') : false;\n\n    function handleCancelClick() {\n        setOpen(false);\n        props.onCancel();\n    }\n\n    function handleApplyClick() {\n        setOpen(false);\n\n        const tagsTrimmed = tags.trim();\n        const tagsParsed = tagsTrimmed ? parseCsv(tagsTrimmed) : [];\n\n        const flagsTrimmed = flags.trim();\n        const flagsParsed = flagsTrimmed ? parseCsv(flagsTrimmed) : [];\n\n        props.onApply(Object.assign({}, props.record, {\n            description,\n            barcode,\n            memo,\n            tags: (tagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\n            flags: (flagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\n            dueDate: (dueDate && !Number.isNaN(dueDate.getTime())) ? formatDate(dueDate) : '',\n            taskStatus,\n            teamOrStory,\n        }));\n    }\n\n    function handleArchiveOrDeleteClick() {\n        setConfirmOpen(true);\n    }\n\n    function handleDescriptionChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setDescription(event.target.value);\n    }\n\n    function handleDueDateChange(date: MaterialUiPickersDate) {\n        setDueDate(date);\n    }\n\n    function handleTaskStatusChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\n        if (! event.target.name) {\n            return;\n        }\n        setTaskStatus(event.target.value as string);\n    }\n\n    function handleTeamOrStoryChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\n        if (! event.target.name) {\n            return;\n        }\n        setTeamOrStory(event.target.value as string);\n    }\n\n    function handleTagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setTags(event.target.value);\n    }\n\n    function handleFlagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setFlags(event.target.value);\n    }\n\n    function handleBarcodeChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setBarcode(event.target.value);\n    }\n\n    function handleMemoChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setMemo(event.target.value);\n    }\n\n    function handleConfirmArchiving(apply: boolean) {\n        setConfirmOpen(false);\n        if (apply) {\n            setOpen(false);\n            props.onArchive(props.record._id);\n        }\n    }\n\n    function handleConfirmUnarchiving(apply: boolean) {\n        setConfirmOpen(false);\n        if (apply) {\n            setOpen(false);\n            props.onUnarchive(props.record._id);\n        }\n    }\n\n    function handleConfirmDeleting(apply: boolean) {\n        setConfirmOpen(false);\n        if (apply) {\n            setOpen(false);\n            props.onDelete(props.record._id);\n        }\n    }\n\n    return (\n        <>\n            <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n                <DialogTitle id={formDialogTitleId} style={{paddingBottom: '0'}}>\n                    Edit Kanban\n                    <Button\n                        className={clsx(classes.fabDelete)}\n                        variant=\"outlined\"\n                        color={props.board.preferArchive ? 'default' : 'secondary'}\n                        onClick={handleArchiveOrDeleteClick} >\n                        {props.board.preferArchive ?\n                            (archived ? <UnarchiveIcon /> : <ArchiveIcon />) :\n                            <DeleteIcon color=\"secondary\" />}\n                        <Typography variant=\"body1\" color={props.board.preferArchive ? 'initial' : 'secondary'}\n                            style={{marginLeft: theme.spacing(1)}} >\n                            {props.board.preferArchive ?\n                                (archived ? 'Unarchive' : 'Archive') :\n                                'Delete'}\n                        </Typography>\n                    </Button>\n                </DialogTitle>\n                <DialogContent>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <div>\n                            <TextField\n                                margin=\"dense\"\n                                label=\"Description\"\n                                multiline\n                                rows={4}\n                                rowsMax={16}\n                                fullWidth\n                                value={description}\n                                onChange={handleDescriptionChange}\n                                helperText=\"Markdown syntax is available\"\n                                />\n                        </div>\n                        <div>\n                            <KeyboardDatePicker\n                                margin=\"dense\"\n                                label=\"Due date\"\n                                format=\"yyyy-MM-dd\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                                value={dueDate}\n                                onChange={handleDueDateChange}\n                                />\n                        </div>\n                        <div>\n                            <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\n                                <InputLabel htmlFor={taskStatusesId}>Status</InputLabel>\n                                <Select\n                                    value={taskStatus}\n                                    onChange={handleTaskStatusChange}\n                                    inputProps={{\n                                        name: 'taskStatus',\n                                        id: taskStatusesId,\n                                    }}\n                                    >\n                                    {props.taskStatuses.map(x => (\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\n                                <InputLabel htmlFor={teamOrStoryId}>Team / Story</InputLabel>\n                                <Select\n                                    value={teamOrStory}\n                                    onChange={handleTeamOrStoryChange}\n                                    inputProps={{\n                                        name: 'teamOrStory',\n                                        id: teamOrStoryId,\n                                    }}\n                                    >\n                                    {props.teamOrStories.map(x => (\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {props.board.displayTags && props.board.displayFlags ?\n                            <div>\n                                <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"Tags\"\n                                        value={tags}\n                                        onChange={handleTagsChange}\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\n                                        />\n                                </FormControl>\n                                <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"Flags\"\n                                        value={flags}\n                                        onChange={handleFlagsChange}\n                                        helperText=\"Separate with commas (Excel CSV syntax)\"\n                                        />\n                                </FormControl>\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayTags && !props.board.displayFlags ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Tags\"\n                                    fullWidth\n                                    value={tags}\n                                    onChange={handleTagsChange}\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayFlags && !props.board.displayTags ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Flags\"\n                                    fullWidth\n                                    value={flags}\n                                    onChange={handleFlagsChange}\n                                    helperText=\"Separate with commas (Excel CSV syntax)\"\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayBarcode ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Barcode\"\n                                    multiline\n                                    rows={1}\n                                    rowsMax={16}\n                                    fullWidth\n                                    value={barcode}\n                                    onChange={handleBarcodeChange}\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayMemo ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Memo\"\n                                    multiline\n                                    rows={1}\n                                    rowsMax={16}\n                                    fullWidth\n                                    value={memo}\n                                    onChange={handleMemoChange}\n                                    />\n                            </div> :\n                            <></>\n                        }\n                    </MuiPickersUtilsProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancelClick} variant=\"outlined\" color=\"default\">\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />Cancel\n                    </Button>\n                    <Button onClick={handleApplyClick} variant=\"contained\" color=\"primary\">\n                        <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />Apply\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {confirmOpen ?\n                <ConfirmDialog\n                    open={true}\n                    title={props.board.preferArchive ?\n                        (archived ? 'Unarchive kanban' : 'Archive kanban') :\n                        'Delete kanban'}\n                    message={`Are you sure want to ${props.board.preferArchive ?\n                        (archived ? 'unarchive' : 'archive') :\n                        'delete'} the kanban?`}\n                    colorIsSecondary={props.board.preferArchive ? false : true}\n                    applyButtonCaption={props.board.preferArchive ?\n                        (archived ? 'Unarchive' : 'Archive') :\n                        'Delete'}\n                    fab={props.board.preferArchive ?\n                        (archived ?\n                            <Fab size=\"large\" variant=\"round\" aria-label=\"unarchive\" style={{margin: 'auto'}}>\n                                <UnarchiveIcon />\n                            </Fab> :\n                            <Fab size=\"large\" variant=\"round\" aria-label=\"archive\" style={{margin: 'auto'}}>\n                                <ArchiveIcon />\n                            </Fab>\n                        ) :\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={props.board.preferArchive ?\n                        (archived ? handleConfirmUnarchiving : handleConfirmArchiving):\n                        handleConfirmDeleting} /> :\n                <></>\n            }\n        </>\n    );\n}\nexport default KanbanDialog;\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                      from 'react';\nimport { connect }                from 'react-redux';\nimport { RouteComponentProps }    from 'react-router-dom';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport Typography                 from '@material-ui/core/Typography';\nimport IconButton                 from '@material-ui/core/IconButton';\nimport AddBoxIcon                 from '@material-ui/icons/AddBox';\nimport clsx                       from 'clsx';\nimport marked                     from 'marked';\nimport createDOMPurify            from 'dompurify';\nimport { Qr }                     from 'red-agate-barcode/modules/barcode/Qr';\nimport { LaneDef,\n         StatusLaneDef,\n         KanbanRecord,\n         KanbanBoardState, \n         KanbanBoardRecord }      from '../types';\nimport gensym                     from '../lib/gensym';\nimport { parseISODate }           from '../lib/datetime';\nimport { isDark }                 from '../lib/theme';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions }     from '../dispatchers/KanbanBoardDispatcher';\nimport KanbanDialog               from '../components/KanbanDialog';\nimport TextInputDialog            from '../components/TextInputDialog';\nimport { getConstructedAppStore } from '../store';\nimport                                 './KanbanBoardView.css';\n\n\n\ntype StickysProps = KanbanBoardActions & {\n    records: KanbanRecord[],\n    taskStatus: StatusLaneDef,\n    teamOrStory: LaneDef,\n    taskStatuses: StatusLaneDef[],\n    teamOrStories: LaneDef[],\n    board: KanbanBoardRecord,\n};\n\ntype StickyProps = KanbanBoardActions & {\n    record: KanbanRecord,\n    taskStatus: StatusLaneDef,\n    teamOrStory: LaneDef,\n    taskStatuses: StatusLaneDef[],\n    teamOrStories: LaneDef[],\n    board: KanbanBoardRecord,\n};\n\ntype KanbanBoardViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\n};\n\n\nconst DOMPurify = createDOMPurify(window);\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    smallIcon: {\n        width: '20px',\n        height: '20px',\n    },\n}));\n\n\nconst mapNeverStateToProps = () => ({});\n\nconst agent = window.navigator.userAgent.toLowerCase();\nconst firefox = (agent.indexOf('firefox') !== -1);\n\n\nconst Sticky_: React.FC<StickyProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\n    const expired = (! props.taskStatus.completed) &&\n        (dueDate ? dueDate < today : false);\n\n    function handleOnDragStart(ev: React.DragEvent) {\n        ev.dataTransfer.setData('elId', (ev.target as any).id);\n    }\n\n    function handleEditApply(rec: KanbanRecord) {\n        props.updateSticky(rec);\n        setOpen(false);\n    }\n\n    function handleArchive(id: string) {\n        props.archiveSticky(id);\n        setOpen(false);\n    }\n\n    function handleUnarchive(id: string) {\n        props.unarchiveSticky(id);\n        setOpen(false);\n    }\n\n    function handleDelete(id: string) {\n        props.deleteSticky(id);\n        setOpen(false);\n    }\n\n    function handleEditCancel() {\n        setOpen(false);\n    }\n\n    return (\n        <>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n                id={gensym()}\n                data-record-id={props.record._id || ''}\n                className=\"KanbanBoardView-sticky-link\"\n                draggable\n                onClick={ev => setOpen(true)}\n                onDragStart={handleOnDragStart}>\n                <div\n                    className={'KanbanBoardView-sticky-note' + (expired ? ' expired' : '')} >\n                    {props.board.displayTags && props.record.tags.length ?\n                        <ul className=\"KanbanBoardView-sticky-tags\">{\n                            props.record.tags.map((x, index) => {\n                                const tags = props.board.tags || [];\n                                const matched = tags.find(q => q.value === x);\n                                return (\n                                    <li key={props.record._id + '-tag-' + index}\n                                        className={matched ? matched.className : ''}>{x}</li>\n                                );\n                            })\n                        }</ul> :\n                        <></>\n                    }\n                    <div\n                        className=\"KanbanBoardView-sticky-description\"\n                        dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(marked(props.record.description))}} />\n                    {props.board.displayBarcode && props.record.barcode ?\n                        <div className=\"KanbanBoardView-sticky-barcode\"\n                            dangerouslySetInnerHTML={{__html: new Qr({\n                            fill: true,\n                            fillColor: isDark ? '#fff' : '#000',\n                            cellSize: 2,\n                            unit: 'px',\n                            data: props.record.barcode,\n                        }).toImgTag()}} />\n                        : <></>\n                    }\n                    {props.record.flags.includes('Marked') ?\n                        <div className=\"marked\">{'📍'}</div> :\n                        <></>\n                    }\n                    {props.record.dueDate ?\n                        <div className=\"due-date\">{(expired ? '🔥' : '⏳' ) + props.record.dueDate}</div> :\n                        <></>\n                    }\n                </div>\n            </a>\n            {open ?\n                <KanbanDialog\n                    open={true}\n                    record={props.record}\n                    teamOrStories={props.teamOrStories}\n                    taskStatuses={props.taskStatuses}\n                    board={props.board}\n                    onApply={handleEditApply}\n                    onArchive={handleArchive}\n                    onUnarchive={handleUnarchive}\n                    onDelete={handleDelete}\n                    onCancel={handleEditCancel} /> : <></>\n            }\n        </>\n    );\n}\nconst Sticky = connect(mapNeverStateToProps, mapDispatchToProps)(Sticky_);\n\n\nconst Stickys_: React.FC<StickysProps> = (props) => {\n    function handleOnDragOver(ev: React.DragEvent) {\n        ev.preventDefault();\n    }\n\n    function handleOnDrop(ev: React.DragEvent) {\n        try {\n            const elId = ev.dataTransfer.getData('elId');\n            const el = document.getElementById(elId);\n            props.updateStickyLanes({\n                kanbanId: (el as any).dataset.recordId,\n                taskStatusValue: props.taskStatus.value,\n                teamOrStoryValue: props.teamOrStory.value,\n            })\n        } catch (e) {\n            alert(e.message);\n        }\n        ev.preventDefault();\n    }\n\n    const filtered = props.records.filter(x => !x.flags || !x.flags.includes('Archived'));\n\n    return (\n        <div\n            className={\n                'KanbanBoardView-sticky-wrap ' + \n                (props.teamOrStory.className || '') + ' ' +\n                (props.taskStatus.className || '')}\n            data-status={props.taskStatus.value}\n            data-team-or-story={props.teamOrStory.value}\n            onDragOver={handleOnDragOver}\n            onDrop={handleOnDrop}\n            >\n            {filtered.map(record => (\n                <Sticky\n                    key={record._id || gensym()}\n                    teamOrStory={props.teamOrStory}\n                    taskStatus={props.taskStatus}\n                    teamOrStories={props.teamOrStories}\n                    taskStatuses={props.taskStatuses}\n                    board={props.board}\n                    record={record}/>\n            ))}\n            {(firefox && filtered.length === 0) ?\n                // NOTE: hack for the height of div becomes 0 in Firefox\n                <div style={{width: '100%', height: '100%'}}>&nbsp;</div> :\n                <></>\n            }\n        </div>\n    );\n}\nconst Stickys = connect(mapNeverStateToProps, mapDispatchToProps)(Stickys_);\n\n\nconst KanbanBoardView: React.FC<KanbanBoardViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogEditBoardName,\n    });\n\n    function handleClickEditBoardName() {\n        const currentState = getConstructedAppStore().getState();\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'Edit board name',\n            message: '',\n            fieldLabel: 'Board name',\n            value: currentState.kanbanBoard.activeBoard.name,\n        }));\n    }\n\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            const currentState = getConstructedAppStore().getState();\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\n        }\n    }\n\n    if (props.match.params.id) {\n        if (props.activeBoard._id !== props.match.params.id) {\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n            return (\n                <div className=\"KanbanBoardView-content\">\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                No boards found.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Click here to show main board.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className=\"KanbanBoardView-content\">\n            <style dangerouslySetInnerHTML={{__html: props.activeBoard.boardStyle}}></style>\n            <Typography\n                variant=\"h6\" align=\"center\" style={{cursor: 'pointer'}}\n                onClick={handleClickEditBoardName} >{props.activeBoard.name}</Typography>\n            <table className=\"KanbanBoardView-board\">\n                <thead>\n                    <tr>\n                        <th className=\"KanbanBoardView-header-cell-add-sticky\">\n                            <IconButton style={{margin: 0, padding: 0}}\n                                        onClick={ev => props.addSticky()}>\n                                <AddBoxIcon className={clsx(classes.smallIcon)} />\n                            </IconButton>\n                        </th>\n                        {props.activeBoard.taskStatuses.map(taskStatus => (\n                            <th key={taskStatus.value}\n                                className={\n                                    'KanbanBoardView-header-cell-task-statuses ' +\n                                    (taskStatus.className || '')}>\n                                {taskStatus.caption || taskStatus.value}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.activeBoard.teamOrStories.map(teamOrStory => (\n                        <tr key={teamOrStory.value}>\n                            <th className={\n                                'KanbanBoardView-header-cell-team-or-stories ' +\n                                (teamOrStory.className || '')}>\n                                {teamOrStory.caption || teamOrStory.value}\n                            </th>\n                            {props.activeBoard.taskStatuses.map(taskStatus => (\n                                <td key={taskStatus.value}\n                                    className={\n                                        (teamOrStory.className || '') + ' ' +\n                                        (taskStatus.className || '')}>\n                                    <Stickys\n                                        teamOrStory={teamOrStory}\n                                        taskStatus={taskStatus}\n                                        teamOrStories={props.activeBoard.teamOrStories}\n                                        taskStatuses={props.activeBoard.taskStatuses}\n                                        board={props.activeBoard}\n                                        records={props.activeBoard.records.filter(\n                                            x => x.teamOrStory === teamOrStory.value &&\n                                                 x.taskStatus  === taskStatus.value)} />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            {props.activeBoard.boardNote ?\n                <div className=\"KanbanBoardView-board-note-wrap\">\n                    <div className=\"KanbanBoardView-board-note\"\n                        dangerouslySetInnerHTML={{__html : DOMPurify.sanitize(marked(props.activeBoard.boardNote))}} />\n                </div> :\n                <></>\n            }\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoardView);\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { KanbanRecord,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions }   from '../actions/AppEventsActions';\nimport { CalendarActions as CalendarActions_,\n         calendarActions }    from '../actions/CalendarActions';\nimport { KanbanBoardActions as KanbanBoardActions_,\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\nexport type CalendarActions = CalendarActions_;\nexport type KanbanBoardActions = KanbanBoardActions_;\n\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        showToday: () =>\n            dispatch(calendarActions.showToday()),\n        showNextMonth: () =>\n            dispatch(calendarActions.showNextMonth()),\n        showPreviousMonth: () =>\n            dispatch(calendarActions.showPreviousMonth()),\n        showNextYear: () =>\n            dispatch(calendarActions.showNextYear()),\n        showPreviousYear: () =>\n            dispatch(calendarActions.showPreviousYear()),\n\n        // from AppEventsActions\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n\n        // from KanbanBoardActions\n        changeActiveBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startChangeActiveBoard(Object.assign({}, { boardId }, { dispatch }))),\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\n        updateSticky: (v: KanbanRecord) =>\n            dispatch(kanbanBoardActions.startUpdateSticky(Object.assign({}, v, { dispatch }))),\n        archiveSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startArchiveSticky({ kanbanId })),\n        unarchiveSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startUnarchiveSticky({ kanbanId })),\n        deleteSticky: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startDeleteSticky(Object.assign({}, { kanbanId }, { dispatch }))),\n    }\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, { kanbanBoardState: appState.kanbanBoard }, appState.calendar);\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                      from 'react';\nimport { connect }                from 'react-redux';\nimport { RouteComponentProps }    from 'react-router-dom';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport Typography                 from '@material-ui/core/Typography';\nimport IconButton                 from '@material-ui/core/IconButton';\nimport ChevronLeftIcon            from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon           from '@material-ui/icons/ChevronRight';\nimport SkipPreviousIcon           from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon               from '@material-ui/icons/SkipNext';\nimport CalendarTodayIcon          from '@material-ui/icons/CalendarToday';\nimport clsx                       from 'clsx';\nimport { KanbanRecord,\n         CalendarState,\n         KanbanBoardState, \n         KanbanBoardRecord }      from '../types';\nimport { parseISODate }           from '../lib/datetime';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         CalendarActions }        from '../dispatchers/CalendarViewDispatcher';\nimport KanbanDialog               from '../components/KanbanDialog';\nimport TextInputDialog            from '../components/TextInputDialog';\nimport { getConstructedAppStore } from '../store';\nimport                                 './CalendarView.css';\n\n\n\ntype CalendarItemProps = CalendarState & CalendarActions &\n        { kanbanBoardState: KanbanBoardState } & {\n    board: KanbanBoardRecord,\n    record: KanbanRecord,\n};\n\n\ntype CalendarViewProps = CalendarState & CalendarActions &\n        { kanbanBoardState: KanbanBoardState } & RouteComponentProps<{id: string}> & {\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n    },\n    calendar: {\n        width: 'calc(100% - 30px)',\n        height: '100%',\n        margin: '15px',\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        tableLayout: 'fixed',\n    },\n    calendarTitle: {\n        position: 'relative',\n        height: '30px',\n    },\n    calendarTitleToolBar: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        margin: '3px 3px 6px 4px',\n        overflow: 'hidden',\n        width: 'calc(100% - 30px)',\n        height: '39px',\n    },\n    calendarTopLeftHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n    },\n    calendarDaysHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n    },\n    calendarSundayHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n        backgroundColor: 'var(--weak-header-bg-color)',\n        color: 'var(--calendar-sunday-color)',\n    },\n    calendarSaturdayHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n        backgroundColor: 'var(--weak-header-bg-color)',\n        color: 'var(--calendar-saturday-color)',\n    },\n    calendarCell: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        verticalAlign: 'top',\n    },\n    calendarWeekendCell: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        verticalAlign: 'top',\n        backgroundColor: 'var(--weak-data-bg-color)',\n    },\n    calendarCellCaptionToday: {\n        color: 'var(--calendar-today-color)',\n        backgroundColor: 'var(--calendar-today-bg-color)',\n        borderRadius: '10px',\n        border: 'solid 1.5px var(--calendar-today-bg-color)',\n    },\n    chip: {\n        fontSize: 'smaller',\n        borderRadius: '5px',\n        backgroundColor:'var(--sticky-blue-color)',\n        color: 'var(--main-text-color)',\n        width: '100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        marginBottom: '2px',\n        paddingLeft: '3px',\n        paddingRight: '3px',\n    },\n    chipWrap: {\n        '&:hover': {\n            cursor: 'pointer',\n        }\n    }\n}));\n\n\nconst CalendarItem_: React.FC<CalendarItemProps> = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const teamOrStory = props.board.teamOrStories.find(x => x.value === props.record.teamOrStory);\n    const taskStatus = props.board.taskStatuses.find(x => x.value === props.record.taskStatus);\n\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\n    const expired = (! (taskStatus && taskStatus.completed)) &&\n        (dueDate ? dueDate < today : false);\n    const archived = props.record.flags && props.record.flags.includes('Archived');\n\n    function handleEditApply(rec: KanbanRecord) {\n        props.updateSticky(rec);\n        setOpen(false);\n    }\n\n    function handleArchive(id: string) {\n        props.archiveSticky(id);\n        setOpen(false);\n    }\n\n    function handleUnarchive(id: string) {\n        props.unarchiveSticky(id);\n        setOpen(false);\n    }\n\n    function handleDelete(id: string) {\n        props.deleteSticky(id);\n        setOpen(false);\n    }\n\n    function handleEditCancel() {\n        setOpen(false);\n    }\n\n    return (\n        <>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n                className={clsx(classes.chipWrap)}\n                onClick={ev => setOpen(true)}>\n                <div className={clsx(classes.chip) + ' CalendarView-item-chip' +\n                    (teamOrStory ? ' ' + teamOrStory.className : '') +\n                    (taskStatus ? ' ' + taskStatus.className : '') +\n                    (expired ? ' expired' : '') +\n                    (archived ? ' archived' : '')}>\n                    {props.record.description.trim().replace(/\\n/g, ' ').replace(/#+/g, '').trim()}\n                </div>\n            </a>\n            {open ?\n                <KanbanDialog\n                    open={true}\n                    record={props.record}\n                    teamOrStories={props.kanbanBoardState.activeBoard.teamOrStories}\n                    taskStatuses={props.kanbanBoardState.activeBoard.taskStatuses}\n                    board={props.board}\n                    onApply={handleEditApply}\n                    onArchive={handleArchive}\n                    onUnarchive={handleUnarchive}\n                    onDelete={handleDelete}\n                    onCancel={handleEditCancel} /> : <></>\n            }\n        </>\n    );\n}\nconst CalendarItem = connect(mapStateToProps, mapDispatchToProps)(CalendarItem_);\n\nconst CalendarView: React.FC<CalendarViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogEditBoardName,\n    });\n\n    function handleClickEditBoardName() {\n        const currentState = getConstructedAppStore().getState();\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'Edit board name',\n            message: '',\n            fieldLabel: 'Board name',\n            value: currentState.kanbanBoard.activeBoard.name,\n        }));\n    }\n\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            const currentState = getConstructedAppStore().getState();\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\n        }\n    }\n\n    if (props.match.params.id) {\n        if (props.kanbanBoardState.activeBoard._id !== props.match.params.id) {\n            const index = props.kanbanBoardState.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n            return (\n                <div className={classes.root}>\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                No boards found.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Click here to show main board.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n    const month = props.activeMonth;\n\n    const firstDateOfMonth = new Date(month.getFullYear(), month.getMonth(), 1);\n    const lastDateOfMonth = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n    const firstDateOfCal = new Date(\n        firstDateOfMonth.getFullYear(), firstDateOfMonth.getMonth(),\n        1 - firstDateOfMonth.getDay());\n    const lastDateOfCal = new Date(\n        lastDateOfMonth.getFullYear(), lastDateOfMonth.getMonth(),\n        lastDateOfMonth.getDate() + (6 - lastDateOfMonth.getDay()));\n    const nextCalDate = new Date(\n        lastDateOfCal.getFullYear(), lastDateOfCal.getMonth(),\n        lastDateOfCal.getDate() + 1);\n\n    const dates: Array<Date[]> = [];\n    let week: Date[] = [];\n    dates.push(week);\n    for (let wd = firstDateOfCal;\n            wd.getTime() <= lastDateOfCal.getTime();\n            wd = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1)) {\n        if (7 <= week.length) {\n            week = [];\n            dates.push(week);\n        }\n        week.push(wd);\n    }\n\n    const stickys = props.kanbanBoardState.activeBoard.records.filter(x => {\n        if (!x.dueDate) {\n            return false;\n        }\n        const d = new Date(x.dueDate);\n        if (firstDateOfCal <= d && d < nextCalDate) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n\n    return (\n        <div className={clsx(classes.root)}>\n            <style dangerouslySetInnerHTML={{__html: props.kanbanBoardState.activeBoard.calendarStyle}}></style>\n            <div className={clsx(classes.calendarTitle)}>\n                <div className={clsx(classes.calendarTitleToolBar)}>\n                    <IconButton onClick={ev => props.showToday()}>\n                        <CalendarTodayIcon /><Typography variant=\"caption\" style={{marginLeft: '1em'}}>Today</Typography>\n                    </IconButton>\n                    <IconButton onClick={ev => props.showPreviousYear()}>\n                        <SkipPreviousIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showPreviousMonth()}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showNextMonth()}>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showNextYear()}>\n                        <SkipNextIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '2em'}}>{\n                        props.activeMonth.toLocaleDateString(\n                            (navigator as any).userLanguage || navigator.language || (navigator as any).browserLanguage || 'en',\n                            {year: 'numeric', month: 'long'})\n                    }</Typography>\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '3em', cursor: 'pointer'}}\n                        onClick={handleClickEditBoardName} >{\n                        props.kanbanBoardState.activeBoard.name}</Typography>\n                </div>\n            </div>\n            <table className={clsx(classes.calendar)}>\n                <thead>\n                    <tr>\n                        <th className={clsx(classes.calendarTopLeftHeader)}></th>\n                        <th className={clsx(classes.calendarSundayHeader)}>Sun</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Mon</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Tue</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Wed</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Thu</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Fri</th>\n                        <th className={clsx(classes.calendarSaturdayHeader)}>Sat</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {dates.map(week =>\n                        <tr key={week[0].getTime()}>\n                            <td className={clsx(classes.calendarCell)}></td>\n                            {week.map((wd: Date, index: number) => {\n                                const next = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1);\n                                return (\n                                    <td key={wd.toISOString()}\n                                        className={clsx(index === 0 || index === 6 ? classes.calendarWeekendCell :classes.calendarCell)}>\n                                        <div style={{position: 'relative'}}>\n                                            <div\n                                                className={wd <= today && today < next ? clsx(classes.calendarCellCaptionToday) : ''}\n                                                style={{position: 'absolute', top: '0', right: '0'}}>\n                                                {wd.getDate()}\n                                            </div>\n                                            <div style={{paddingTop: '20px', minHeight: '80px'}}>\n                                                {stickys.filter(x => {\n                                                    const d = new Date(x.dueDate);\n                                                    if (wd <= d && d < next) {\n                                                        return true;\n                                                    } else {\n                                                        return false;\n                                                    }\n                                                }).map(x =>\n                                                    <CalendarItem\n                                                        board={props.kanbanBoardState.activeBoard}\n                                                        key={x._id}\n                                                        record={x} />\n                                                )}\n                                            </div>\n                                        </div>\n                                    </td>\n                                );\n                            })}\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView);\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport { KanbanBoardRecord,\n         KanbanRecord,\n         AppConfig }       from '../types';\n\n\n\nexport function pickEditableStickyProps(sticky: KanbanRecord) {\n    return (Object.assign(sticky._id ? { _id: sticky._id } : {}, {\n        dueDate: sticky.dueDate || '',\n        taskStatus: sticky.taskStatus || '',\n        teamOrStory: sticky.teamOrStory || '',\n        flags: sticky.flags || [],\n        tags: sticky.tags || [],\n        description: sticky.description || '',\n        barcode: sticky.barcode || '',\n        memo: sticky.memo || '',\n    }));\n}\n\n\nexport function pickEditableBoardProps(board: KanbanBoardRecord) {\n    return ({\n        name: board.name || '',\n        taskStatuses: board.taskStatuses || [],\n        teamOrStories: board.teamOrStories || [],\n        tags: board.tags || [],\n        displayBarcode: !!board.displayBarcode,\n        displayMemo: !!board.displayMemo,\n        displayFlags: !!board.displayFlags,\n        displayTags: !!board.displayTags,\n        preferArchive: !!board.preferArchive,\n        boardStyle: board.boardStyle || '',\n        calendarStyle: board.calendarStyle || '',\n        boardNote: board.boardNote || '',\n        records: (board.records && board.records.map(x => pickEditableStickyProps(x))) || [],\n    });\n}\n\n\nexport function validateStickyProps(sticky: KanbanRecord) {\n    if (typeof sticky.dueDate !== 'string') {\n        throw new Error('string property \"dueDate\" is required.');\n    }\n    if (typeof sticky.taskStatus !== 'string') {\n        throw new Error('string property \"taskStatus\" is required.');\n    }\n    if (typeof sticky.teamOrStory !== 'string') {\n        throw new Error('string property \"teamOrStory\" is required.');\n    }\n    if (sticky.flags && Array.isArray(sticky.flags)) {\n        sticky.flags.forEach(x => {\n            if (typeof x !== 'string') {\n                throw new Error('property \"flags[x]\" should be string.');\n            }\n        });\n    } else {\n        throw new Error('array property \"flags\" is required.');\n    }\n    if (sticky.tags && Array.isArray(sticky.tags)) {\n        sticky.tags.forEach(x => {\n            if (typeof x !== 'string') {\n                throw new Error('property \"tags[x]\" should be string.');\n            }\n        });\n    } else {\n        throw new Error('array property \"tags\" is required.');\n    }\n    if (typeof sticky.description !== 'string') {\n        throw new Error('string property \"description\" is required.');\n    }\n    if (typeof sticky.barcode !== 'string') {\n        throw new Error('string property \"barcode\" is required.');\n    }\n    if (typeof sticky.memo !== 'string') {\n        throw new Error('string property \"memo\" is required.');\n    }\n    return sticky;\n}\n\n\nfunction checkStyleXSS(text: string) {\n    if (text.match(/<\\/style\\s*>/i) || text.match(/<script\\b/i)) {\n        throw new Error('bad style text is set.');\n    }\n}\n\n\nexport function validateBoardProps(board: KanbanBoardRecord) {\n    if (typeof board.name !== 'string') {\n        throw new Error('string property \"name\" is required.');\n    }\n    if (board.taskStatuses && Array.isArray(board.taskStatuses)) {\n        board.taskStatuses.forEach(x => {\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\n                throw new Error('property \"taskStatuses[x].caption\" should be string.');\n            }\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('property \"taskStatuses[x].className\" should be string.');\n            }\n            if (x.completed !== null && x.completed !== void 0 && typeof x.completed !== 'boolean') {\n                throw new Error('property \"taskStatuses[x].completed\" should be boolean.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('string property \"taskStatuses[x].value\" is required.');\n            }\n        });\n    } else {\n        throw new Error('array property \"taskStatuses\" is required.');\n    }\n    if (board.teamOrStories && Array.isArray(board.teamOrStories)) {\n        board.teamOrStories.forEach(x => {\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\n                throw new Error('property \"teamOrStories[x].caption\" should be string.');\n            }\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('property \"teamOrStories[x].className\" should be string.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('string property \"teamOrStories[x].value\" is required.');\n            }\n        });\n    } else {\n        throw new Error('array property \"teamOrStories\" is required.');\n    }\n    if (board.tags && Array.isArray(board.tags)) {\n        board.tags.forEach(x => {\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('property \"tags[x].className\" should be string.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('string property \"tags[x].value\" is required.');\n            }\n        });\n    } else {\n        throw new Error('array property \"tags\" is required.');\n    }\n    if (typeof board.displayBarcode !== 'boolean') {\n        throw new Error('boolean property \"displayBarcode\" is required.');\n    }\n    if (typeof board.displayMemo !== 'boolean') {\n        throw new Error('boolean property \"displayMemo\" is required.');\n    }\n    if (typeof board.displayFlags !== 'boolean') {\n        throw new Error('boolean property \"displayFlags\" is required.');\n    }\n    if (typeof board.displayTags !== 'boolean') {\n        throw new Error('boolean property \"displayTags\" is required.');\n    }\n    if (typeof board.preferArchive !== 'boolean') {\n        throw new Error('boolean property \"preferArchive\" is required.');\n    }\n    if (typeof board.boardStyle !== 'string') {\n        throw new Error('string property \"boardStyle\" is required.');\n    }\n    checkStyleXSS(board.boardStyle);\n    if (typeof board.calendarStyle !== 'string') {\n        throw new Error('string property \"calendarStyle\" is required.');\n    }\n    checkStyleXSS(board.calendarStyle);\n    if (typeof board.boardNote !== 'string') {\n        throw new Error('string property \"boardNote\" is required.');\n    }\n\n    if (board.records && Array.isArray(board.records)) {\n        board.records.forEach(x => validateStickyProps(x));\n    } else {\n        throw new Error('array property \"records\" is required.');\n    }\n\n    return board;\n}\n\n\nexport function pickEditableConfigProps(conf: AppConfig) {\n    return ({\n        remote: {\n            endpointUrl: conf.remote && conf.remote.endpointUrl ?\n                conf.remote.endpointUrl : '',\n            user: conf.remote && conf.remote.user ?\n                conf.remote.user : '',\n            password: conf.remote && conf.remote.password ?\n                conf.remote.password : '',\n        },\n        display: {\n            autoUpdate: !!(conf.display && conf.display.autoUpdate),\n            autoUpdateInterval: conf.display && conf.display.autoUpdateInterval ?\n                conf.display.autoUpdateInterval : 2419200,\n            goAround: !!(conf.display && conf.display.goAround),\n        },\n    });\n}\n\n\nexport function validateConfigProps(conf: AppConfig) {\n    if (! conf.remote) {\n        throw new Error('object property \"remote\" is required.');\n    }\n    if (typeof conf.remote.endpointUrl !== 'string') {\n        throw new Error('string property \"remote.endpointUrl\" is required.');\n    }\n    if (typeof conf.remote.user !== 'string') {\n        throw new Error('string property \"remote.user\" is required.');\n    }\n    if (typeof conf.remote.password !== 'string') {\n        throw new Error('string property \"remote.password\" is required.');\n    }\n\n    if (! conf.display) {\n        throw new Error('object property \"display\" is required.');\n    }\n    if (typeof conf.display.autoUpdate !== 'boolean') {\n        throw new Error('boolean property \"display.autoUpdate\" is required.');\n    }\n    if (typeof conf.display.autoUpdateInterval !== 'number') {\n        throw new Error('number property \"display.autoUpdateInterval\" is required.');\n    }\n    if (conf.display.autoUpdateInterval < 10) {\n        throw new Error('number property \"display.autoUpdateInterval\" should 10 <= autoUpdateInterval (unit: sec).');\n    }\n    if (typeof conf.display.goAround !== 'boolean') {\n        throw new Error('boolean property \"display.goAround\" is required.');\n    }\n    return conf;\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                          from 'react';\nimport { connect }                    from 'react-redux';\nimport { RouteComponentProps }        from 'react-router-dom';\nimport { makeStyles,\n         useTheme }                   from '@material-ui/core/styles';\nimport Button                         from '@material-ui/core/Button';\nimport CheckIcon                      from '@material-ui/icons/Check';\nimport DeleteIcon                     from '@material-ui/icons/Delete';\nimport Typography                     from '@material-ui/core/Typography';\nimport Fab                            from '@material-ui/core/Fab';\nimport clsx                           from 'clsx';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport                                     'codemirror/lib/codemirror.css';\nimport                                     'codemirror/theme/material.css';\nimport                                     'codemirror/mode/yaml/yaml';\nimport jsYaml                         from 'js-yaml';\nimport { KanbanBoardState }           from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions }         from '../dispatchers/KanbanBoardDispatcher';\nimport ConfirmDialog                  from '../components/ConfirmDialog';\nimport { pickEditableBoardProps,\n         validateBoardProps }         from '../lib/validation';\nimport                                     './EditorView.css';\n\n\n\ntype EditorViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n        width: '100%',\n        height: '100%',\n    },\n    header: {\n        height: '45px',\n        position: 'relative',\n    },\n    codemirror: {\n        display: 'grid',\n        width: 'calc(100% - 20px)',\n        height: 'calc(100vh - 65px)',\n    },\n    fabSave: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        left: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n}));\n\n\nconst EditorView: React.FC<EditorViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [confirmDeletingOpen, setConfirmDeletingOpen] = React.useState(false);\n    const [editorValue, setEditorValue] = React.useState('');\n    const [editCount, setEditCount] = React.useState(0);\n    // NOTE: codeMirror.current.props.value is NOT updated after onChange event.\n    // const codeMirror = useRef((null as any) as CodeMirror);\n\n    function handleSaveClick() {\n        try {\n            const data = jsYaml.safeLoad(editorValue);\n            if (data) {\n                validateBoardProps(data);\n                props.editBoardAndStickys(Object.assign({}, data, { _id: props.activeBoard._id }));\n            } else {\n                //\n            }\n        } catch (e) {\n            props.showAlertDialog({\n                open: true,\n                title: 'Error',\n                message: e.message || String(e),\n                singleButton: true,\n                colorIsSecondary: true,\n                onClose: () => props.closeAlertDialog(),\n            });\n        }\n    }\n\n    function handleConfirmDeleting(apply: boolean) {\n        setConfirmDeletingOpen(false);\n        if (apply) {\n            props.deleteBoard(props.activeBoard._id);\n        }\n    }\n\n    function handleEditorChange(editor: any, data: any, value: string) {\n        setEditorValue(value);\n        setEditCount(editCount + 1);\n    }\n\n    if (props.match.params.id) {\n        if (props.activeBoard._id !== props.match.params.id) {\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n\n            // NOTE: dirty hack\n            setTimeout(() => {\n                setEditCount(0);\n            }, 30);\n\n            return (\n                <div className={classes.root}>\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                No boards found.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Click here to show main board.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className={clsx(classes.root)}>\n            <div className={clsx(classes.header)}>\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{props.activeBoard.name}</Typography>\n                <Button\n                    className={clsx(classes.fabSave)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={editCount === 0}\n                    onClick={handleSaveClick} >\n                    <CheckIcon />\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\n                        Save\n                    </Typography>\n                </Button>\n                {props.boards.length > 1 ?\n                    <Button\n                        className={clsx(classes.fabDelete)}\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={ev => setConfirmDeletingOpen(true)} >\n                        <DeleteIcon color=\"secondary\" />\n                        <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\n                            Delete\n                        </Typography>\n                    </Button> :\n                    <></>\n                }\n            </div>\n            <div>\n                <CodeMirror\n                    className={clsx(classes.codemirror)}\n                    value={`# Board settings\\n\\n${\n                        jsYaml.safeDump(pickEditableBoardProps(props.activeBoard), {lineWidth: 1000})\n                    }`}\n                    options={{\n                        mode: 'yaml',\n                        theme: 'material',\n                        lineNumbers: true,\n                        lineWrapping: true,\n                    }}\n                    onChange={handleEditorChange}\n                />\n            </div>\n            {confirmDeletingOpen ?\n                <ConfirmDialog\n                    open={confirmDeletingOpen}\n                    title=\"Delete board\"\n                    message=\"Are you sure want to delete the board?\"\n                    colorIsSecondary={true}\n                    applyButtonCaption=\"Delete\"\n                    confirmingTextLabel={'Type \"Delete board\" to delete this board.'}\n                    confirmingTextValue=\"Delete board\"\n                    fab={\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={handleConfirmDeleting} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorView);\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                          from 'react';\nimport { connect }                    from 'react-redux';\nimport { RouteComponentProps }        from 'react-router-dom';\nimport { makeStyles,\n         useTheme }                   from '@material-ui/core/styles';\nimport Button                         from '@material-ui/core/Button';\nimport CheckIcon                      from '@material-ui/icons/Check';\nimport DeleteIcon                     from '@material-ui/icons/Delete';\nimport Typography                     from '@material-ui/core/Typography';\nimport Fab                            from '@material-ui/core/Fab';\nimport clsx                           from 'clsx';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport                                     'codemirror/lib/codemirror.css';\nimport                                     'codemirror/theme/material.css';\nimport                                     'codemirror/mode/yaml/yaml';\nimport jsYaml                         from 'js-yaml';\nimport { AppEventsState }             from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         AppEventsActions }           from '../dispatchers/AppEventsDispatcher';\nimport ConfirmDialog                  from '../components/ConfirmDialog';\nimport { pickEditableConfigProps,\n         validateConfigProps }        from '../lib/validation';\nimport                                     './SettingsView.css';\n\n\n\ntype SettingsViewProps = AppEventsState & AppEventsActions & RouteComponentProps<{id: string}> & {\n};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n        width: '100%',\n        height: '100%',\n    },\n    header: {\n        height: '45px',\n        position: 'relative',\n    },\n    codemirror: {\n        display: 'grid',\n        width: 'calc(100% - 20px)',\n        height: 'calc(100vh - 65px)',\n    },\n    fabSave: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        left: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n}));\n\n\nconst SettingsView: React.FC<SettingsViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [confirmResetAppOpen, setConfirmResetAppOpen] = React.useState(false);\n    const [editorValue, setEditorValue] = React.useState('');\n    const [editCount, setEditCount] = React.useState(0);\n\n    function handleSaveClick() {\n        try {\n            const data = jsYaml.safeLoad(editorValue);\n            if (data) {\n                validateConfigProps(data);\n                props.updateAppConfig(Object.assign({}, data));\n            } else {\n                throw new Error('object property \"remote\" is required.');\n            }\n        } catch (e) {\n            props.showAlertDialog({\n                open: true,\n                title: 'Error',\n                message: e.message || String(e),\n                singleButton: true,\n                colorIsSecondary: true,\n                onClose: () => props.closeAlertDialog(),\n            });\n        }\n    }\n\n    function handleConfirmResetApplication(apply: boolean) {\n        setConfirmResetAppOpen(false);\n        if (apply) {\n            props.resetApplication();\n        }\n    }\n\n    function handleEditorChange(editor: any, data: any, value: string) {\n        setEditorValue(value);\n        setEditCount(editCount + 1);\n    }\n\n    return (\n        <div className={clsx(classes.root)}>\n            <div className={clsx(classes.header)}>\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{'Application Settings'}</Typography>\n                <Button\n                    className={clsx(classes.fabSave)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={editCount === 0}\n                    onClick={handleSaveClick} >\n                    <CheckIcon />\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\n                        Save\n                    </Typography>\n                </Button>\n                <Button\n                    className={clsx(classes.fabDelete)}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={ev => setConfirmResetAppOpen(true)} >\n                    <DeleteIcon color=\"secondary\" />\n                    <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\n                        Reset application\n                    </Typography>\n                </Button>\n            </div>\n            <div>\n                <CodeMirror\n                    className={clsx(classes.codemirror)}\n                    value={`# App settings\\n\\n${\n                        jsYaml.safeDump(pickEditableConfigProps(props.appConfig), {lineWidth: 1000})\n                    }`}\n                    options={{\n                        mode: 'yaml',\n                        theme: 'material',\n                        lineNumbers: true,\n                        lineWrapping: true,\n                    }}\n                    onChange={handleEditorChange}\n                />\n            </div>\n            {confirmResetAppOpen ?\n                <ConfirmDialog\n                    open={confirmResetAppOpen}\n                    title=\"Reset application\"\n                    message={'Are you sure want to reset application?\\nAll local data and configurations will be REMOVED!'}\n                    colorIsSecondary={true}\n                    applyButtonCaption=\"Reset\"\n                    confirmingTextLabel={'Type \"Reset application\" to remove all data.'}\n                    confirmingTextValue=\"Reset application\"\n                    fab={\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"reset application\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={handleConfirmResetApplication} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView);\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React,\n       { useEffect,\n         useRef }                from 'react';\nimport { connect }               from 'react-redux';\nimport { Route,\n         Switch }                from \"react-router-dom\";\nimport CssBaseline               from '@material-ui/core/CssBaseline';\nimport { makeStyles }            from '@material-ui/core/styles';\nimport { ThemeProvider }         from '@material-ui/styles';\nimport clsx                      from 'clsx';\nimport { AppEventsState }        from './types';\nimport { restartSync }           from './lib/db';\nimport { theme }                 from './lib/theme';\nimport { getCurrentView }        from './lib/util';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         AppEventsActions }      from './dispatchers/AppEventsDispatcher';\nimport { getConstructedAppStore,\n         history }               from './store';\nimport AppDrawer                 from './components/AppDrawer';\nimport KanbanBoardView           from './views/KanbanBoardView';\nimport CalendarView              from './views/CalendarView';\nimport EditorView                from './views/EditorView';\nimport SettingsView              from './views/SettingsView';\nimport ConfirmDialog             from './components/ConfirmDialog';\n\n\n\ntype AppProps = AppEventsState & AppEventsActions;\n\n\nconst useStyles = makeStyles(theme => ({\n    app: {\n        display: 'flex',\n    },\n}));\n\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nfunction useInterval(callback: () => void, delay: number | null) {\n    const savedCallback = useRef() as React.MutableRefObject<any>;\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n\n            // Clean up the timer when unmount or before re-calling.\n            return () => clearInterval(id);\n        }\n\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, [delay]);\n}\n\n\nconst App: React.FC<AppProps> = (props) => {\n    const classes = useStyles();\n\n    // Update periodic\n    useInterval(\n        () => {\n            if (props.appConfig) {\n                console.log('periodic timer:' + new Date());\n                restartSync()\n                .then(() => {\n                    let goAround = false;\n                    let nextActiveBoardId = '';\n                    const store = getConstructedAppStore();\n                    if(store && props.appConfig.display) {\n                        const state = store.getState();\n                        if (props.appConfig.display.goAround && state.kanbanBoard.boards.length > 1) {\n                            const index = (Math.max(0, state.kanbanBoard.boards\n                                .findIndex(x => x._id === state.kanbanBoard.activeBoardId)) + 1) %\n                                state.kanbanBoard.boards.length;\n                            goAround = true;\n                            nextActiveBoardId = state.kanbanBoard.boards[index]._id;\n                        }\n                    }\n                    const viewName = getCurrentView(history);\n                    if (viewName !== 'config' && viewName !== 'edit') {\n                        if (goAround) {\n                            history.push(`/${viewName}/${nextActiveBoardId}`);\n                        } else {\n                            props.refreshActiveBoard();\n                        }\n                    }\n                })\n                .catch(err => {\n                    console.log(err.message);\n                });\n            }\n        },\n        props.appConfig && props.appConfig.display &&\n            props.appConfig.display.autoUpdate ?\n                (props.appConfig.display.autoUpdateInterval || 2419200) * 1000 :\n                null\n    );\n\n    // Update only first time (apply synchronized data to renderer)\n    // NOTE: The first board displayed is not up-to-date with the remote database\n    useEffect(() => {\n        // run once\n        setTimeout(() => {\n            props.refreshActiveBoard();\n        }, 3000);\n\n    /* eslint-disable-next-line react-hooks/exhaustive-deps */\n    }, []);\n\n    return (\n        <div className={clsx(classes.app)}>\n            <CssBaseline />\n            <ThemeProvider theme={theme}>\n                <AppDrawer />\n                <Switch>\n                    <Route path=\"/\" exact component={KanbanBoardView} />\n                    <Route path=\"/kanban/:id?\" component={KanbanBoardView} />\n                    <Route path=\"/calendar/:id?\" component={CalendarView} />\n                    <Route path=\"/edit/:id?\" component={EditorView} />\n                    <Route path=\"/config/\" component={SettingsView} />\n                </Switch>\n                {props.alertDialog.open ?\n                    <ConfirmDialog {...props.alertDialog} /> :\n                    <></>\n                }\n            </ThemeProvider>\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Copyright (c) 2019 Shellyl_N and Authors\n// license: ISC\n// https://github.com/shellyln\n\nimport React                    from 'react';\nimport ReactDOM                 from 'react-dom';\nimport { Provider }             from 'react-redux';\nimport { ConnectedRouter }      from 'connected-react-router'\nimport { getLocalDb }           from './lib/db'\nimport                               './index.css';\nimport App                      from './App';\nimport * as serviceWorker       from './serviceWorker';\nimport getAppStore,\n       { history }              from './store';\n\n\n\n(async () => {\n    getLocalDb();\n\n    ReactDOM.render(\n        <Provider store={await getAppStore()}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>,\n        document.getElementById('root'));\n\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}